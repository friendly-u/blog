{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/LICENSE","path":"LICENSE","modified":1,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/images/title.png","path":"images/title.png","modified":1,"renderable":0},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/nprogress.js","path":"js/third-party/nprogress.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/Golang web gin.md","hash":"be1bdd55507a1f865cf8ba5143f92beb50018df5","modified":1629107043539},{"_id":"source/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1626684855013},{"_id":"source/README.md","hash":"a0c955beb0039ec363eb47e882242a8b35e92c67","modified":1626690455198},{"_id":"source/CNAME","hash":"4ab1464796afd74feee23b12e01fbe1a6dcc40ee","modified":1626684855013},{"_id":"source/about/index.md","hash":"fe8b8fa115846506304f563f12a8ef35d8c06ed6","modified":1628237820445},{"_id":"source/_posts/Golang字符串操作.md","hash":"592b06ffcbda4e1d610a1a05bad69edc4f4893f5","modified":1626923641841},{"_id":"source/_posts/Golang类型转换.md","hash":"75fab64275d93f157d840e3c2c521602bf9713d1","modified":1626691809302},{"_id":"source/_posts/Golang连接HTML.md","hash":"fb6644a5f14083cc57cd9732294abd2d1583a1d4","modified":1626923694321},{"_id":"source/404.md","hash":"b1e4a86b2de4b3bed9a4f60be954b27b0e242233","modified":1626684855013},{"_id":"source/_posts/Golang连接Email.md","hash":"6f8cd15fc97d3f028a8478edccb3126783e37a65","modified":1626746032568},{"_id":"source/_posts/Golang连接Redis.md","hash":"7cccb4863beb496763fc418a241dc8ff01e92af3","modified":1626923675628},{"_id":"source/_posts/Golang连接Mysql.md","hash":"4169c5679b864e28d11b8c28999a6831810871b1","modified":1626923683050},{"_id":"source/_posts/Minikube的安装使用.md","hash":"d9e0b5bb6841bb9b792ad2c93e836fe73d372417","modified":1626763611268},{"_id":"source/_posts/k8s为服务签发证书.md","hash":"f0e63b8b15876b37a01f39aea61228b3daf03a12","modified":1628157564242},{"_id":"source/_posts/Golang连接Shell.md","hash":"0e9d897e195dc0dfccb6cf659930af31b2ba2922","modified":1626923654334},{"_id":"source/_posts/如何写一个systemd服务.md","hash":"75a79be7dc67cffd1e3608bfd797cc2c6df3fb3d","modified":1626691508170},{"_id":"source/_posts/kubeadm的脚本部署.md","hash":"24ff904c59d8cc3eff3a7ebe5bb4ccfc7ec94b9d","modified":1626763599797},{"_id":"source/_posts/operator-sdk如何使用.md","hash":"d86bd0d830c76c4389af7c0fd79694e5c4b9745f","modified":1626923613490},{"_id":"source/_posts/部署Rancher.md","hash":"9164dbadf3ba0cad5ae548befafe1ff9cc9f3e0e","modified":1626763576802},{"_id":"source/categories/index.md","hash":"97a63f7c4a0f248acc506d634fe30737ed4cb628","modified":1626690455200},{"_id":"source/tags/index.md","hash":"84926a0dae22bcf1615451ccc7feb64668022a5b","modified":1626690455200},{"_id":"source/images/title.png","hash":"a4c23e5e921a5079de7c35d109b768cee0893d8a","modified":1626690455200},{"_id":"node_modules/hexo-theme-next/package.json","hash":"f5dc37928b4939245ffac0ca2d886058eb6252d0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/README.md","hash":"fab15a85d9d8d90ecd8879525b9b74fb1c197978","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"c352385539c77d3599017304a2e0186983ee254e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"2924be391e4841e2166e83d4d18515c4d247653f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"9cd3eca2c468bb46c7c5bf391bea4b025af178f6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"651e3b33d86a7cdb9fd7895ca28279f8b1a24faa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"6387357ac2dd498e8b8d630d27050a59180d7e8f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"e9af1afe529ca747a04b801401d394b2ad696fde","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"2a9861db4547a524b2609c1e7e1061d2e9d48ee4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"55b38c7617c24bdc27c9de6cf39f4b191d154fb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"87edab5a3eb7577a409c01df3f1631de40f8956f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"ba06ad089d01b45b217249af338145881eab3e25","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"02bafc6ee86263790603861e356596f0c916e392","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"8ee5ca39ac4a372a5c0f16e344bbe578af4aeae4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"b106599106285ecd4c0c1e0ed11c46a36b5a69d5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"c12f8a7497596441503f2541d2f746f2ee7dd594","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"89091bc943cd8b8c63b8af3d26fb0a027048e9ba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/nprogress.njk","hash":"80fd1a45e91207fc16df1136e12b8b71b4f65dea","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"0cd7da6755459d60779f0a7ccf311e26e184d55d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"99ab10d9aef1ee5ae5e8f3572ac0de25c3cc4416","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"42a9b81c5449afa9d67770604478168333c93804","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"b9785bc737470e9b8e910e7da9e8c45c2ead58fa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"454ed1fac07be972c7ec911092f0995cd925aab3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"13e7badc036e989307069f65b179deb107012435","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"acef5acc728f24cb657be8d7010d836b4d556b0e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"b37f9847d2f95632e911df670b51921a7d748068","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"76bba5d7916e9930e68215a0fce3a7d81c44510f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"2ecaa30ec42d28ef769d875cf2d26959b8de7d24","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"2ffeac130c5309bc83b1e9b764dd23688c0cd7db","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"ca2ccf3cf1874c45712f192ad45dea96fbd9920d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"49aa8de07918a11399131dfd703418af3f0a1a19","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"1084e38df2f05a2f58df7f987e660775e9be1bf2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"7384e6390067ef2a84e7310d6adb3f6104ed62e2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"cc1a11190b1a55ae8d4252d296803bc19db90bc5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"5994278b3900828fd02d418f99f6c3b4e88e27a9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"3fc91aba5b17a5ae60b8e04707a7da87db4d0340","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"d82c24136bbd3443b85f07f5579845833b594684","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"aa05e6b3d613a756178b8ba06832ad27499d4c14","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"135b87d151055eefdbc711d9e704b112b3214a84","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"92ab6bb3c3122980699f0613dac27a7cabfedecc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"13b3301aa9b613975630502d93e6ae82c5293aa8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"62f4638674c92dfb72454fee38751d0227d3d225","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/nprogress.js","hash":"7d56b18a2bdece5468470c70c5f3eb79d4120964","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d4809783ded05625675b1b4bbd9e99d7f5f7d7f9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"3c7ae405dd30b9b46494a6b9a6cb1b7ec6138ba9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"32a1b73944561655087d80f025208a84e012b3cf","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"9f88d350df8115d26c6adbc2025a27ef9a42d7ff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"8d7ad58c9086161b05843aa7e44973148be33611","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"0c9f72ad98807521cbdcee7b5bbe2e884311db39","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"2a29bf3692f42f84e8f29314e0fb349f86fc727a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ece860218125bdb2578f373ed4f5040c9670e4b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"41cba8c4c5637a6b8f1b62e67673b33676f5d734","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"be5c46b983df08b9dbac1b4749b1a101b54b6b50","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"9771db8b6b2541181a0e463c4bf305276d47657d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"b3fa752f72ca1413289b76c56fbd33a00e3d25d7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"aafb764c64f6cd5a48ad194adf65ac77078242b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"5d61dedb3bec1021d52894f9b379e4d0953f6a35","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"76d0dfb3a8b873a6180604ac6daecf38b6a963a2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"7102f8e819b62cf7d121fd063dc663fd068feaa6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"83c6588c51cd418336f4945813410a100ddfe2a4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"2ca4dea5e7785c9b77566d95cabf896d20a42741","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"b457756758f0632767e8a560e3033059cbe4a67b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"2c534d2b2dbc932ad65d335a720a7ba9612bac04","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"2896840ab8ac8ab2a7f76d18df893f290ac31625","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"f1778d2c56974b96dae429456d5c55be325c4946","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"d6d60f02b5e9f89dbfce180b3884030898022664","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"cf194bea1c9e67fde871a04de3bc81df72c54277","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"eae7b83f1c711ad2ab3a41d89f517445856ffec8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f7ff85fe6c4efb8ff036fab2c3277b7d8bed69a8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"6394340c28a21f6aa90e786f3bfe24fb26595653","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"432e73bc4f99322af6af1852e0ea6e674919c31a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"69eb1c282a8fd5dbab606cc09c34c5dc8e44e753","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"bf88d9c585d7b00463c46352402cfea415c29493","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"cef4e779473daa3761709958243c6b8a57bbd814","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"08e79881d58d01afab6dbed37ab4f52356564d7e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"2421500e447822ef1b6826403a3e1df3345641d7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"3c029a003e9bf747e1b9cc7c0c127f6028374876","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"f53e6c12bd4805888f696386d00668f23cd335e7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"50b00218e854200c4ec0573a841e226d49c45cba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"4f482514230c941c9475e1272188e53a54975463","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"15a5e273a8137550c93c8d2a60f9fcf86e04a89e","modified":499162500000},{"_id":"public/search.json","hash":"9b733b9be46c95227eccc5ef4555437e7c9024c4","modified":1629107161922},{"_id":"public/404.html","hash":"6baf7decf64e906adbe4bfa01d76f5c135c839c5","modified":1629107161922},{"_id":"public/about/index.html","hash":"f4fe9b722c160ce38d43375c902d0a4c1446accc","modified":1629107161922},{"_id":"public/tags/index.html","hash":"9560e6785e9e2387f04ffcd0e87825a264eab40d","modified":1629107161922},{"_id":"public/categories/index.html","hash":"105d9709b2fc8df1545caa6f596398ae8b7203c5","modified":1629107161922},{"_id":"public/2021/07/20/部署Rancher/index.html","hash":"c92e8c51696208ad91e8959632b99bfc0e9045e0","modified":1629107161922},{"_id":"public/2021/07/19/Golang连接HTML/index.html","hash":"b8305b464e0498d48d7cff33a40534973a87b268","modified":1629107161922},{"_id":"public/2021/07/19/Golang连接Shell/index.html","hash":"0d5e17e21cfee6103a34fb1098937160d8be5513","modified":1629107161922},{"_id":"public/2021/07/19/如何写一个systemd服务/index.html","hash":"a1418f6639f74f73ee6e59b20d2ec7d5a0dbad66","modified":1629107161922},{"_id":"public/archives/index.html","hash":"f01881a5b9808566cc1e5607062d1b9b46318dcb","modified":1629107161922},{"_id":"public/archives/page/2/index.html","hash":"773c640e7e3e78a766b7afa2deeb2ed49f9dd53f","modified":1629107161922},{"_id":"public/archives/2021/index.html","hash":"d9cdeb064fcff124ad36e56df7d172b9d37d3e15","modified":1629107161922},{"_id":"public/archives/2021/page/2/index.html","hash":"6142b694cc5e0e6175dcec35b3b4e5c4aae07ab9","modified":1629107161922},{"_id":"public/archives/2021/07/index.html","hash":"a292e627af4354cac4329194241a452f831d54b2","modified":1629107161922},{"_id":"public/archives/2021/07/page/2/index.html","hash":"150f14d6b8cbfe4b62322d6d957b7bc69470ff42","modified":1629107161922},{"_id":"public/tags/golang/index.html","hash":"78ce81d88bc583ac80a22de1761e062cb70f95cd","modified":1629107161922},{"_id":"public/tags/k8s/index.html","hash":"d24081f5dbd985dad6db140b1dce2daaeafe6413","modified":1629107161922},{"_id":"public/tags/安装部署/index.html","hash":"9d839b87e188ee5dc50df2d062186095d1fbc04c","modified":1629107161922},{"_id":"public/tags/linux/index.html","hash":"464634cf4bcbaedca1f1e5f3a0ecab00467c62c4","modified":1629107161922},{"_id":"public/tags/开发/index.html","hash":"38ec8d250685bfc3259b389ed50f8a47d2240508","modified":1629107161922},{"_id":"public/categories/开发/index.html","hash":"16ba04e17699fb1950260f8b419977bf5c879412","modified":1629107161922},{"_id":"public/2021/07/20/operator-sdk如何使用/index.html","hash":"628069990afd6480b3480fe82d7232000743d6df","modified":1629107161922},{"_id":"public/2021/07/20/Minikube的安装使用/index.html","hash":"75227a4cdd19c5ec5c29590b60d1bf4ec5c9a0b2","modified":1629107161922},{"_id":"public/2021/07/19/Golang类型转换/index.html","hash":"00b21f3a284d6a9a4d53e61294d4febc18bb8335","modified":1629107161922},{"_id":"public/2021/07/19/Golang字符串操作/index.html","hash":"7b7129faf6b97f0e3f86488057e31b982f9c0839","modified":1629107161922},{"_id":"public/2021/07/19/Golang连接Email/index.html","hash":"6a151183c495c262174b10ddf96273f5d8bd67d9","modified":1629107161922},{"_id":"public/2021/07/19/Golang连接Redis/index.html","hash":"d365ff2cc431b27b087cc2df5a660dc4ceb6da4a","modified":1629107161922},{"_id":"public/2021/07/19/Golang连接Mysql/index.html","hash":"c42d8430e0113e4c8855ac1fcc8eb0fde3b3e1f2","modified":1629107161922},{"_id":"public/2021/07/19/kubeadm的脚本部署/index.html","hash":"8f3446ba4f5f000b30f700bef50fdcb0eb93247f","modified":1629107161922},{"_id":"public/2021/07/19/Golang web gin/index.html","hash":"002e421bb5c4730e072936eb2d85cffca51e2e91","modified":1629107161922},{"_id":"public/2021/07/19/k8s为服务签发证书/index.html","hash":"82a420219de43ee086459b7dffb1083bddf0b316","modified":1629107161922},{"_id":"public/index.html","hash":"2a668a91b71fff0811bbd887f12b653374cb121d","modified":1629107161922},{"_id":"public/page/2/index.html","hash":"070d202d58eb3e2b8ff5f6cae19a55dc89b6ce80","modified":1629107161922},{"_id":"public/CNAME","hash":"4ab1464796afd74feee23b12e01fbe1a6dcc40ee","modified":1629107161922},{"_id":"public/README.md","hash":"a0c955beb0039ec363eb47e882242a8b35e92c67","modified":1629107161922},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1629107161922},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1629107161922},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1629107161922},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1629107161922},{"_id":"public/images/title.png","hash":"a4c23e5e921a5079de7c35d109b768cee0893d8a","modified":1629107161922},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1629107161922},{"_id":"public/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1629107161922},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1629107161922},{"_id":"public/live2dw/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1629107161922},{"_id":"public/live2dw/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1629107161922},{"_id":"public/live2dw/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1629107161922},{"_id":"public/live2dw/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/idle_00.mtn","hash":"378b4577217c604c9d28ab4edf8b707c8d8c2fbb","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/idle_01.mtn","hash":"88c2494655dbb712b842f03232b619f381753d52","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/idle_02.mtn","hash":"7f5d2cf8706007c8659938eba132a68c470a4c26","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1629107161922},{"_id":"public/live2dw/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1629107161922},{"_id":"public/live2dw/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1629107161922},{"_id":"public/live2dw/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1629107161922},{"_id":"public/live2dw/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1629107161922},{"_id":"public/live2dw/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1629107161922},{"_id":"public/live2dw/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1629107161922},{"_id":"public/live2dw/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1629107161922},{"_id":"public/live2dw/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1629107161922},{"_id":"public/live2dw/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1629107161922},{"_id":"public/live2dw/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1629107161922},{"_id":"public/live2dw/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1629107161922},{"_id":"public/live2dw/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1629107161922},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1629107161922},{"_id":"public/live2dw/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1629107161922},{"_id":"public/live2dw/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1629107161922},{"_id":"public/live2dw/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1629107161922},{"_id":"public/live2dw/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1629107161922},{"_id":"public/live2dw/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1629107161922},{"_id":"public/live2dw/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1629107161922},{"_id":"public/live2dw/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1629107161922},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1629107161922},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1629107161922},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1629107161922},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1629107161922},{"_id":"public/js/next-boot.js","hash":"2ecaa30ec42d28ef769d875cf2d26959b8de7d24","modified":1629107161922},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1629107161922},{"_id":"public/css/noscript.css","hash":"54d14cd43dc297950a4a8d39ec9644dd5fc3499f","modified":1629107161922},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1629107161922},{"_id":"public/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":1629107161922},{"_id":"public/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1629107161922},{"_id":"public/js/schemes/muse.js","hash":"62f4638674c92dfb72454fee38751d0227d3d225","modified":1629107161922},{"_id":"public/js/utils.js","hash":"2ffeac130c5309bc83b1e9b764dd23688c0cd7db","modified":1629107161922},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1629107161922},{"_id":"public/js/third-party/nprogress.js","hash":"7d56b18a2bdece5468470c70c5f3eb79d4120964","modified":1629107161922},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1629107161922},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1629107161922},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1629107161922},{"_id":"public/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":1629107161922},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1629107161922},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1629107161922},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1629107161922},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1629107161922},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1629107161922},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1629107161922},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1629107161922},{"_id":"public/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":1629107161922},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1629107161922},{"_id":"public/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1629107161922},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1629107161922},{"_id":"public/js/third-party/tags/mermaid.js","hash":"aafb764c64f6cd5a48ad194adf65ac77078242b1","modified":1629107161922},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1629107161922},{"_id":"public/js/third-party/math/mathjax.js","hash":"9771db8b6b2541181a0e463c4bf305276d47657d","modified":1629107161922},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1629107161922},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1629107161922},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1629107161922},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1629107161922},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1629107161922},{"_id":"public/css/main.css","hash":"968e7a27c7536f7685ce056e5de6e01389d26c12","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1629107161922},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1629107161922},{"_id":"public/live2dw/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1629107161922}],"Category":[{"name":"开发","_id":"cksegcb9s000kx34w5nnm01kw"}],"Data":[],"Page":[{"title":"about","date":"2020-01-17T07:49:34.000Z","_content":"\n为了提高日常工作的效率，整理了这个博客，希望对你也同样适用。\n\n#### 欢迎大家加入我的 github 社区\n\nhttps://github.com/friendly-u\n\n#### 留稿地址\n806459794@qq.com","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-01-17 15:49:34\n---\n\n为了提高日常工作的效率，整理了这个博客，希望对你也同样适用。\n\n#### 欢迎大家加入我的 github 社区\n\nhttps://github.com/friendly-u\n\n#### 留稿地址\n806459794@qq.com","updated":"2021-08-06T08:17:00.445Z","path":"about/index.html","comments":1,"layout":"page","_id":"cksegcb9l0000x34w2k9re7a7","content":"<p>为了提高日常工作的效率，整理了这个博客，希望对你也同样适用。</p>\n<h4 id=\"欢迎大家加入我的-github-社区\"><a href=\"#欢迎大家加入我的-github-社区\" class=\"headerlink\" title=\"欢迎大家加入我的 github 社区\"></a>欢迎大家加入我的 github 社区</h4><p><a href=\"https://github.com/friendly-u\">https://github.com/friendly-u</a></p>\n<h4 id=\"留稿地址\"><a href=\"#留稿地址\" class=\"headerlink\" title=\"留稿地址\"></a>留稿地址</h4><p><a href=\"mailto:&#x38;&#x30;&#54;&#52;&#x35;&#57;&#55;&#57;&#52;&#64;&#x71;&#113;&#46;&#x63;&#111;&#x6d;\">&#x38;&#x30;&#54;&#52;&#x35;&#57;&#55;&#57;&#52;&#64;&#x71;&#113;&#46;&#x63;&#111;&#x6d;</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>为了提高日常工作的效率，整理了这个博客，希望对你也同样适用。</p>\n<h4 id=\"欢迎大家加入我的-github-社区\"><a href=\"#欢迎大家加入我的-github-社区\" class=\"headerlink\" title=\"欢迎大家加入我的 github 社区\"></a>欢迎大家加入我的 github 社区</h4><p><a href=\"https://github.com/friendly-u\">https://github.com/friendly-u</a></p>\n<h4 id=\"留稿地址\"><a href=\"#留稿地址\" class=\"headerlink\" title=\"留稿地址\"></a>留稿地址</h4><p><a href=\"mailto:&#x38;&#x30;&#54;&#52;&#x35;&#57;&#55;&#57;&#52;&#64;&#x71;&#113;&#46;&#x63;&#111;&#x6d;\">&#x38;&#x30;&#54;&#52;&#x35;&#57;&#55;&#57;&#52;&#64;&#x71;&#113;&#46;&#x63;&#111;&#x6d;</a></p>\n"},{"title":"404","description":"404 – Page not found.","comments":0,"sitemap":false,"_content":"\n```\n  ██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n  ██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n  ███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n  ╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n       ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n       ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n      ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n      ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n      █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n      ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n      ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n      ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝\n```\n","source":"404.md","raw":"---\npermalink: /404.html\ntitle: 404\ndescription: 404 – Page not found.\ncomments: false\nsitemap: false\n---\n\n```\n  ██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n  ██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n  ███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n  ╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n       ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n       ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n      ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n      ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n      █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n      ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n      ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n      ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝\n```\n","date":"2021-07-19T08:54:15.013Z","updated":"2021-07-19T08:54:15.013Z","path":"/404.html","layout":"page","_id":"cksegcb9n0002x34w3ndeacf2","content":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"文章分类","date":"2021-07-19T09:17:03.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2021-07-19 17:17:03\ntype: \"categories\"\n---\n","updated":"2021-07-19T10:27:35.200Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cksegcb9o0005x34w0tdn1oqf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-07-19T09:16:03.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-07-19 17:16:03\ntype: \"tags\"\n---\n\n","updated":"2021-07-19T10:27:35.200Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cksegcb9p0007x34w5evw5600","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"Golang web","date":"2021-07-19T09:40:06.000Z","_content":"关于 gin 包的有效使用\n<!-- more -->\n\n#### 关于 Post 的使用\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.New()\n\tr.POST(\"/posts\", func(c *gin.Context) {\n\t\tid := c.Query(\"id\")\n\t\tpage := c.DefaultQuery(\"page\", \"0\")\n\t\tusername := c.PostForm(\"username\")\n\t\tpassword := c.DefaultPostForm(\"username\", \"000000\") // 可设置默认值\n\t\tfmt.Println(\"-------\")\n\t\tc.JSON(http.StatusOK, gin.H{\n\t\t\t\"id\":       id,\n\t\t\t\"page\":     page,\n\t\t\t\"username\": username,\n\t\t\t\"password\": password,\n\t\t})\n\t})\n\tr.Run()\n}\n```\n\n```sh\n$ curl \"http://localhost:9999/posts?id=9876&page=7\"  -X POST -d 'username=geektutu&password=1234'\n{\"id\":\"9876\",\"page\":\"7\",\"password\":\"1234\",\"username\":\"geektutu\"}\n```","source":"_posts/Golang web gin.md","raw":"\n---\nlayout: post\ntitle: Golang web\ndate: 2021-07-19 17:40:06\ntags: golang\n---\n关于 gin 包的有效使用\n<!-- more -->\n\n#### 关于 Post 的使用\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.New()\n\tr.POST(\"/posts\", func(c *gin.Context) {\n\t\tid := c.Query(\"id\")\n\t\tpage := c.DefaultQuery(\"page\", \"0\")\n\t\tusername := c.PostForm(\"username\")\n\t\tpassword := c.DefaultPostForm(\"username\", \"000000\") // 可设置默认值\n\t\tfmt.Println(\"-------\")\n\t\tc.JSON(http.StatusOK, gin.H{\n\t\t\t\"id\":       id,\n\t\t\t\"page\":     page,\n\t\t\t\"username\": username,\n\t\t\t\"password\": password,\n\t\t})\n\t})\n\tr.Run()\n}\n```\n\n```sh\n$ curl \"http://localhost:9999/posts?id=9876&page=7\"  -X POST -d 'username=geektutu&password=1234'\n{\"id\":\"9876\",\"page\":\"7\",\"password\":\"1234\",\"username\":\"geektutu\"}\n```","slug":"Golang web gin","published":1,"updated":"2021-08-16T09:44:03.539Z","comments":1,"photos":[],"link":"","_id":"cksegcb9m0001x34w9ify8wlk","content":"<p>关于 gin 包的有效使用</p>\n<span id=\"more\"></span>\n\n<h4 id=\"关于-Post-的使用\"><a href=\"#关于-Post-的使用\" class=\"headerlink\" title=\"关于 Post 的使用\"></a>关于 Post 的使用</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tr <span class=\"token operator\">:=</span> gin<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tid <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n\t\tpage <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n\t\tusername <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">PostForm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span>\n\t\tpassword <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultPostForm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"000000\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 可设置默认值</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------\"</span><span class=\"token punctuation\">)</span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span>       id<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"page\"</span><span class=\"token punctuation\">:</span>     page<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> username<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> password<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">$ curl &quot;http:&#x2F;&#x2F;localhost:9999&#x2F;posts?id&#x3D;9876&amp;page&#x3D;7&quot;  -X POST -d &#39;username&#x3D;geektutu&amp;password&#x3D;1234&#39;\n&#123;&quot;id&quot;:&quot;9876&quot;,&quot;page&quot;:&quot;7&quot;,&quot;password&quot;:&quot;1234&quot;,&quot;username&quot;:&quot;geektutu&quot;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>关于 gin 包的有效使用</p>","more":"<h4 id=\"关于-Post-的使用\"><a href=\"#关于-Post-的使用\" class=\"headerlink\" title=\"关于 Post 的使用\"></a>关于 Post 的使用</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tr <span class=\"token operator\">:=</span> gin<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tid <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n\t\tpage <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n\t\tusername <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">PostForm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span>\n\t\tpassword <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultPostForm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"000000\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 可设置默认值</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------\"</span><span class=\"token punctuation\">)</span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span>       id<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"page\"</span><span class=\"token punctuation\">:</span>     page<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> username<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> password<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">$ curl &quot;http:&#x2F;&#x2F;localhost:9999&#x2F;posts?id&#x3D;9876&amp;page&#x3D;7&quot;  -X POST -d &#39;username&#x3D;geektutu&amp;password&#x3D;1234&#39;\n&#123;&quot;id&quot;:&quot;9876&quot;,&quot;page&quot;:&quot;7&quot;,&quot;password&quot;:&quot;1234&quot;,&quot;username&quot;:&quot;geektutu&quot;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Golang连接 HTML","date":"2021-07-19T10:20:52.000Z","_content":"\nGolang 打通 HTML5\n<!-- more -->\n\n```go\nfunc main() {\n        fs := http.FileServer(http.Dir(\"yuru/html\"))\n        http.Handle(\"/\", fs)\n\n        err := http.ListenAndServe(\":80\", nil)\n        if err != nil {\n                log.Fatal(\"ListenAndServe: \", err)\n        }\n}\n```","source":"_posts/Golang连接HTML.md","raw":"---\nlayout: post\ntitle: Golang连接 HTML\ndate: 2021-07-19 18:20:52\ntags: golang\n---\n\nGolang 打通 HTML5\n<!-- more -->\n\n```go\nfunc main() {\n        fs := http.FileServer(http.Dir(\"yuru/html\"))\n        http.Handle(\"/\", fs)\n\n        err := http.ListenAndServe(\":80\", nil)\n        if err != nil {\n                log.Fatal(\"ListenAndServe: \", err)\n        }\n}\n```","slug":"Golang连接HTML","published":1,"updated":"2021-07-22T03:14:54.321Z","comments":1,"photos":[],"link":"","_id":"cksegcb9n0003x34waoq160vo","content":"<p>Golang 打通 HTML5</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        fs <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yuru/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":80\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ListenAndServe: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang 打通 HTML5</p>","more":"<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        fs <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yuru/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":80\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ListenAndServe: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Golang字符串操作","date":"2021-07-19T10:41:40.000Z","_content":"Golang字符串记录\n<!-- more -->\n\n#### 包含\n```go\nstrings.Contains(\"I'll chop up this carrot\", \"carrot\")\n```\n包含返回true\n\n#### 替换\n```go\nstrings.ReplaceAll(\"one night of love\", \"one\", \"all\")\n```\n\n#### 保留两位小数\n```go\nfunc decimal(value float64) float64 {\n\treturn math.Trunc(value*1e2+0.5) * 1e-2\n}\n\n```\n\n#### 分割字符串\n```go\ns1 := \"Shello-worldP\"\ns2 := s1[1 : len(s1)-1]\necho: hello-world\n```\n\n#### 字符串大小写\n```go\n// ToUpper 将 s 中的所有字符修改为其大写格式\nus := strings.ToUpper(s)\n// ToLower 将 s 中的所有字符修改为其小写格式\nls := strings.ToLower(s)\n```\n\n#### 切割字符串\n```go\n# strings.Split()函数用于将指定的分隔符切割字符串，并返回切割后的字符串切片。\n\ndemo := \"I&love&Go,&and&I&also&love&Python.\"\nstring_slice := strings.Split(demo, \"&\")\nfmt.Println(\"result:\",string_slice)\n# result: [I love Go, and I also love Python.]\n```","source":"_posts/Golang字符串操作.md","raw":"---\nlayout: post\ntitle: Golang字符串操作\ndate: 2021-07-19 18:41:40\ntags: golang\n---\nGolang字符串记录\n<!-- more -->\n\n#### 包含\n```go\nstrings.Contains(\"I'll chop up this carrot\", \"carrot\")\n```\n包含返回true\n\n#### 替换\n```go\nstrings.ReplaceAll(\"one night of love\", \"one\", \"all\")\n```\n\n#### 保留两位小数\n```go\nfunc decimal(value float64) float64 {\n\treturn math.Trunc(value*1e2+0.5) * 1e-2\n}\n\n```\n\n#### 分割字符串\n```go\ns1 := \"Shello-worldP\"\ns2 := s1[1 : len(s1)-1]\necho: hello-world\n```\n\n#### 字符串大小写\n```go\n// ToUpper 将 s 中的所有字符修改为其大写格式\nus := strings.ToUpper(s)\n// ToLower 将 s 中的所有字符修改为其小写格式\nls := strings.ToLower(s)\n```\n\n#### 切割字符串\n```go\n# strings.Split()函数用于将指定的分隔符切割字符串，并返回切割后的字符串切片。\n\ndemo := \"I&love&Go,&and&I&also&love&Python.\"\nstring_slice := strings.Split(demo, \"&\")\nfmt.Println(\"result:\",string_slice)\n# result: [I love Go, and I also love Python.]\n```","slug":"Golang字符串操作","published":1,"updated":"2021-07-22T03:14:01.841Z","comments":1,"photos":[],"link":"","_id":"cksegcb9o0006x34wc5yeb0bq","content":"<p>Golang字符串记录</p>\n<span id=\"more\"></span>\n\n<h4 id=\"包含\"><a href=\"#包含\" class=\"headerlink\" title=\"包含\"></a>包含</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">strings<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'll chop up this carrot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>包含返回true</p>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">strings<span class=\"token punctuation\">.</span><span class=\"token function\">ReplaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one night of love\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"保留两位小数\"><a href=\"#保留两位小数\" class=\"headerlink\" title=\"保留两位小数\"></a>保留两位小数</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">decimal</span><span class=\"token punctuation\">(</span>value <span class=\"token builtin\">float64</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Trunc</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">*</span><span class=\"token number\">1e2</span><span class=\"token operator\">+</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1e-2</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"分割字符串\"><a href=\"#分割字符串\" class=\"headerlink\" title=\"分割字符串\"></a>分割字符串</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s1 <span class=\"token operator\">:=</span> <span class=\"token string\">\"Shello-worldP\"</span>\ns2 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\necho<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span>world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"字符串大小写\"><a href=\"#字符串大小写\" class=\"headerlink\" title=\"字符串大小写\"></a>字符串大小写</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// ToUpper 将 s 中的所有字符修改为其大写格式</span>\nus <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToUpper</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ToLower 将 s 中的所有字符修改为其小写格式</span>\nls <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToLower</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"切割字符串\"><a href=\"#切割字符串\" class=\"headerlink\" title=\"切割字符串\"></a>切割字符串</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"># strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>函数用于将指定的分隔符切割字符串，并返回切割后的字符串切片。\n\ndemo <span class=\"token operator\">:=</span> <span class=\"token string\">\"I&amp;love&amp;Go,&amp;and&amp;I&amp;also&amp;love&amp;Python.\"</span>\nstring_slice <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>demo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result:\"</span><span class=\"token punctuation\">,</span>string_slice<span class=\"token punctuation\">)</span>\n# result<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>I love Go<span class=\"token punctuation\">,</span> and I also love Python<span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang字符串记录</p>","more":"<h4 id=\"包含\"><a href=\"#包含\" class=\"headerlink\" title=\"包含\"></a>包含</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">strings<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'll chop up this carrot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>包含返回true</p>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">strings<span class=\"token punctuation\">.</span><span class=\"token function\">ReplaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one night of love\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"保留两位小数\"><a href=\"#保留两位小数\" class=\"headerlink\" title=\"保留两位小数\"></a>保留两位小数</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">decimal</span><span class=\"token punctuation\">(</span>value <span class=\"token builtin\">float64</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Trunc</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">*</span><span class=\"token number\">1e2</span><span class=\"token operator\">+</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1e-2</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"分割字符串\"><a href=\"#分割字符串\" class=\"headerlink\" title=\"分割字符串\"></a>分割字符串</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s1 <span class=\"token operator\">:=</span> <span class=\"token string\">\"Shello-worldP\"</span>\ns2 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\necho<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span>world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"字符串大小写\"><a href=\"#字符串大小写\" class=\"headerlink\" title=\"字符串大小写\"></a>字符串大小写</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// ToUpper 将 s 中的所有字符修改为其大写格式</span>\nus <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToUpper</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ToLower 将 s 中的所有字符修改为其小写格式</span>\nls <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToLower</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"切割字符串\"><a href=\"#切割字符串\" class=\"headerlink\" title=\"切割字符串\"></a>切割字符串</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"># strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>函数用于将指定的分隔符切割字符串，并返回切割后的字符串切片。\n\ndemo <span class=\"token operator\">:=</span> <span class=\"token string\">\"I&amp;love&amp;Go,&amp;and&amp;I&amp;also&amp;love&amp;Python.\"</span>\nstring_slice <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>demo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result:\"</span><span class=\"token punctuation\">,</span>string_slice<span class=\"token punctuation\">)</span>\n# result<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>I love Go<span class=\"token punctuation\">,</span> and I also love Python<span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Golang类型转换","date":"2021-07-19T10:45:17.000Z","_content":"\nGolang类型转换\n<!-- more -->\n\n#### string 转 int\n```go\nint,err := strconv.Atoi(string)  \n```\n#### string 转 int64  \n```go\nint64, err := strconv.ParseInt(string, 10, 64)  \n//第二个参数为基数（2~36），\n//第三个参数位大小表示期望转换的结果类型，其值可以为0, 8, 16, 32和64，\n//分别对应 int, int8, int16, int32和int64\n```\n#### int 转 string\n```go\nstring := strconv.Itoa(int) \n//等价于\nstring := strconv.FormatInt(int64(int),10)\n```\n#### int64 转 string\n```go\nstring := strconv.FormatInt(int64,10)  \n//第二个参数为基数，可选2~36\n//对于无符号整形，可以使用FormatUint(i uint64, base int)\n```\n#### float 转 string\n```go\nstring := strconv.FormatFloat(float32,'E',-1,32)\nstring := strconv.FormatFloat(float64,'E',-1,64)\n// 'b' (-ddddp±ddd，二进制指数)\n// 'e' (-d.dddde±dd，十进制指数)\n// 'E' (-d.ddddE±dd，十进制指数)\n// 'f' (-ddd.dddd，没有指数)\n// 'g' ('e':大指数，'f':其它情况)\n// 'G' ('E':大指数，'f':其它情况)\n```\n#### string 转 float64\n```go\nfloat,err := strconv.ParseFloat(string,64)\n```\n#### string 转 float32\n```go\nfloat,err := strconv.ParseFloat(string,32)\n```\n\n#### int 转 int64\n```go\nint64_ := int64(1234)\n```\n\n#### []byte 转 string\n```go\ns := string(b)\n```\n#### interface{} 转 string\n```go\nm := make(map[string]interface{})\nm[\"one\"] = \"hahahha\"\ns := m[\"one\"]\na := s.(string)\nfmt.Println(\"a: \", a)\n```","source":"_posts/Golang类型转换.md","raw":"---\nlayout: post\ntitle: Golang类型转换\ndate: 2021-07-19 18:45:17\ntags: golang\n---\n\nGolang类型转换\n<!-- more -->\n\n#### string 转 int\n```go\nint,err := strconv.Atoi(string)  \n```\n#### string 转 int64  \n```go\nint64, err := strconv.ParseInt(string, 10, 64)  \n//第二个参数为基数（2~36），\n//第三个参数位大小表示期望转换的结果类型，其值可以为0, 8, 16, 32和64，\n//分别对应 int, int8, int16, int32和int64\n```\n#### int 转 string\n```go\nstring := strconv.Itoa(int) \n//等价于\nstring := strconv.FormatInt(int64(int),10)\n```\n#### int64 转 string\n```go\nstring := strconv.FormatInt(int64,10)  \n//第二个参数为基数，可选2~36\n//对于无符号整形，可以使用FormatUint(i uint64, base int)\n```\n#### float 转 string\n```go\nstring := strconv.FormatFloat(float32,'E',-1,32)\nstring := strconv.FormatFloat(float64,'E',-1,64)\n// 'b' (-ddddp±ddd，二进制指数)\n// 'e' (-d.dddde±dd，十进制指数)\n// 'E' (-d.ddddE±dd，十进制指数)\n// 'f' (-ddd.dddd，没有指数)\n// 'g' ('e':大指数，'f':其它情况)\n// 'G' ('E':大指数，'f':其它情况)\n```\n#### string 转 float64\n```go\nfloat,err := strconv.ParseFloat(string,64)\n```\n#### string 转 float32\n```go\nfloat,err := strconv.ParseFloat(string,32)\n```\n\n#### int 转 int64\n```go\nint64_ := int64(1234)\n```\n\n#### []byte 转 string\n```go\ns := string(b)\n```\n#### interface{} 转 string\n```go\nm := make(map[string]interface{})\nm[\"one\"] = \"hahahha\"\ns := m[\"one\"]\na := s.(string)\nfmt.Println(\"a: \", a)\n```","slug":"Golang类型转换","published":1,"updated":"2021-07-19T10:50:09.302Z","comments":1,"photos":[],"link":"","_id":"cksegcb9p0008x34w8mrt9r66","content":"<p>Golang类型转换</p>\n<span id=\"more\"></span>\n\n<h4 id=\"string-转-int\"><a href=\"#string-转-int\" class=\"headerlink\" title=\"string 转 int\"></a>string 转 int</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"string-转-int64\"><a href=\"#string-转-int64\" class=\"headerlink\" title=\"string 转 int64\"></a>string 转 int64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseInt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//第二个参数为基数（2~36），</span>\n<span class=\"token comment\">//第三个参数位大小表示期望转换的结果类型，其值可以为0, 8, 16, 32和64，</span>\n<span class=\"token comment\">//分别对应 int, int8, int16, int32和int64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"int-转-string\"><a href=\"#int-转-string\" class=\"headerlink\" title=\"int 转 string\"></a>int 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//等价于</span>\n<span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"int64-转-string\"><a href=\"#int64-转-string\" class=\"headerlink\" title=\"int64 转 string\"></a>int64 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//第二个参数为基数，可选2~36</span>\n<span class=\"token comment\">//对于无符号整形，可以使用FormatUint(i uint64, base int)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"float-转-string\"><a href=\"#float-转-string\" class=\"headerlink\" title=\"float 转 string\"></a>float 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float32</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float64</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'b' (-ddddp±ddd，二进制指数)</span>\n<span class=\"token comment\">// 'e' (-d.dddde±dd，十进制指数)</span>\n<span class=\"token comment\">// 'E' (-d.ddddE±dd，十进制指数)</span>\n<span class=\"token comment\">// 'f' (-ddd.dddd，没有指数)</span>\n<span class=\"token comment\">// 'g' ('e':大指数，'f':其它情况)</span>\n<span class=\"token comment\">// 'G' ('E':大指数，'f':其它情况)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"string-转-float64\"><a href=\"#string-转-float64\" class=\"headerlink\" title=\"string 转 float64\"></a>string 转 float64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">float<span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"string-转-float32\"><a href=\"#string-转-float32\" class=\"headerlink\" title=\"string 转 float32\"></a>string 转 float32</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">float<span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"int-转-int64\"><a href=\"#int-转-int64\" class=\"headerlink\" title=\"int 转 int64\"></a>int 转 int64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">int64_ <span class=\"token operator\">:=</span> <span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"byte-转-string\"><a href=\"#byte-转-string\" class=\"headerlink\" title=\"[]byte 转 string\"></a>[]byte 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s <span class=\"token operator\">:=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"interface-转-string\"><a href=\"#interface-转-string\" class=\"headerlink\" title=\"interface{} 转 string\"></a>interface{} 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hahahha\"</span>\ns <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang类型转换</p>","more":"<h4 id=\"string-转-int\"><a href=\"#string-转-int\" class=\"headerlink\" title=\"string 转 int\"></a>string 转 int</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"string-转-int64\"><a href=\"#string-转-int64\" class=\"headerlink\" title=\"string 转 int64\"></a>string 转 int64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseInt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//第二个参数为基数（2~36），</span>\n<span class=\"token comment\">//第三个参数位大小表示期望转换的结果类型，其值可以为0, 8, 16, 32和64，</span>\n<span class=\"token comment\">//分别对应 int, int8, int16, int32和int64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"int-转-string\"><a href=\"#int-转-string\" class=\"headerlink\" title=\"int 转 string\"></a>int 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//等价于</span>\n<span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"int64-转-string\"><a href=\"#int64-转-string\" class=\"headerlink\" title=\"int64 转 string\"></a>int64 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//第二个参数为基数，可选2~36</span>\n<span class=\"token comment\">//对于无符号整形，可以使用FormatUint(i uint64, base int)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"float-转-string\"><a href=\"#float-转-string\" class=\"headerlink\" title=\"float 转 string\"></a>float 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float32</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float64</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'b' (-ddddp±ddd，二进制指数)</span>\n<span class=\"token comment\">// 'e' (-d.dddde±dd，十进制指数)</span>\n<span class=\"token comment\">// 'E' (-d.ddddE±dd，十进制指数)</span>\n<span class=\"token comment\">// 'f' (-ddd.dddd，没有指数)</span>\n<span class=\"token comment\">// 'g' ('e':大指数，'f':其它情况)</span>\n<span class=\"token comment\">// 'G' ('E':大指数，'f':其它情况)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"string-转-float64\"><a href=\"#string-转-float64\" class=\"headerlink\" title=\"string 转 float64\"></a>string 转 float64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">float<span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"string-转-float32\"><a href=\"#string-转-float32\" class=\"headerlink\" title=\"string 转 float32\"></a>string 转 float32</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">float<span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"int-转-int64\"><a href=\"#int-转-int64\" class=\"headerlink\" title=\"int 转 int64\"></a>int 转 int64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">int64_ <span class=\"token operator\">:=</span> <span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"byte-转-string\"><a href=\"#byte-转-string\" class=\"headerlink\" title=\"[]byte 转 string\"></a>[]byte 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s <span class=\"token operator\">:=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"interface-转-string\"><a href=\"#interface-转-string\" class=\"headerlink\" title=\"interface{} 转 string\"></a>interface{} 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hahahha\"</span>\ns <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Golang连接Email","date":"2021-07-19T10:21:56.000Z","_content":"\nGolang 连接 Email\n<!-- more -->\n\n```go\npackage main\n\nimport (\n    \"crypto/tls\"\n    \"fmt\"\n    \"strconv\"\n\n    \"git.ucloudadmin.com/leesin/email/html\"\n    log \"github.com/gogap/logrus\"\n    \"gopkg.in/gomail.v2\"\n)\n\nfunc SendMail(mailTo []string, subject string, body string) error {\n    //定义邮箱服务器连接信息，如果是阿里邮箱 pass填密码，qq邮箱填授权码\n    mailConn := map[string]string{\n        \"user\": \"123456789@qq.com\",\n        \"pass\": \"授权码\",\n        \"host\": \"smtp.qq.com\",\n        \"port\": \"25\",\n    }\n    port, _ := strconv.Atoi(mailConn[\"port\"]) //转换端口类型为int\n    m := gomail.NewMessage()\n    m.SetHeader(\"From\", \"yw\"+\"<\"+mailConn[\"user\"]+\">\") //这种方式可以添加别名，即“XD Game”， 也可以直接用<code>m.SetHeader(\"From\",mailConn[\"user\"])</code> 读者可以自行实验下效果\n    m.SetHeader(\"To\", mailTo...)                       //发送给多个用户\n    m.SetHeader(\"Subject\", subject)                    //设置邮件主题\n    m.SetBody(\"text/html\", body)                       //设置邮件正文\n    d := gomail.NewDialer(mailConn[\"host\"], port, mailConn[\"user\"], mailConn[\"pass\"])\n    d.TLSConfig = &tls.Config{InsecureSkipVerify: true}\n    err := d.DialAndSend(m)\n    fmt.Println(err)\n    return err\n}\n\nfunc main() {\n    subject := \"Dobrother 运营日报\"\n    body := html.LoadHtml() // html.LoadHtml load html, return type string\n\n    err := SendMail(html.MailTo, subject, body)\n    if err != nil {\n        log.Error(\"邮件发送失败： \", err)\n        return\n    }\n    for _, v := range html.MailTo {\n        log.Info(\"邮件成功发送至管理员: \", v)\n    }\n}\n\n```","source":"_posts/Golang连接Email.md","raw":"---\nlayout: post\ntitle: Golang连接Email\ndate: 2021-07-19 18:21:56\ntags: golang\n---\n\nGolang 连接 Email\n<!-- more -->\n\n```go\npackage main\n\nimport (\n    \"crypto/tls\"\n    \"fmt\"\n    \"strconv\"\n\n    \"git.ucloudadmin.com/leesin/email/html\"\n    log \"github.com/gogap/logrus\"\n    \"gopkg.in/gomail.v2\"\n)\n\nfunc SendMail(mailTo []string, subject string, body string) error {\n    //定义邮箱服务器连接信息，如果是阿里邮箱 pass填密码，qq邮箱填授权码\n    mailConn := map[string]string{\n        \"user\": \"123456789@qq.com\",\n        \"pass\": \"授权码\",\n        \"host\": \"smtp.qq.com\",\n        \"port\": \"25\",\n    }\n    port, _ := strconv.Atoi(mailConn[\"port\"]) //转换端口类型为int\n    m := gomail.NewMessage()\n    m.SetHeader(\"From\", \"yw\"+\"<\"+mailConn[\"user\"]+\">\") //这种方式可以添加别名，即“XD Game”， 也可以直接用<code>m.SetHeader(\"From\",mailConn[\"user\"])</code> 读者可以自行实验下效果\n    m.SetHeader(\"To\", mailTo...)                       //发送给多个用户\n    m.SetHeader(\"Subject\", subject)                    //设置邮件主题\n    m.SetBody(\"text/html\", body)                       //设置邮件正文\n    d := gomail.NewDialer(mailConn[\"host\"], port, mailConn[\"user\"], mailConn[\"pass\"])\n    d.TLSConfig = &tls.Config{InsecureSkipVerify: true}\n    err := d.DialAndSend(m)\n    fmt.Println(err)\n    return err\n}\n\nfunc main() {\n    subject := \"Dobrother 运营日报\"\n    body := html.LoadHtml() // html.LoadHtml load html, return type string\n\n    err := SendMail(html.MailTo, subject, body)\n    if err != nil {\n        log.Error(\"邮件发送失败： \", err)\n        return\n    }\n    for _, v := range html.MailTo {\n        log.Info(\"邮件成功发送至管理员: \", v)\n    }\n}\n\n```","slug":"Golang连接Email","published":1,"updated":"2021-07-20T01:53:52.568Z","comments":1,"photos":[],"link":"","_id":"cksegcb9p0009x34wbriz7qzs","content":"<p>Golang 连接 Email</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"crypto/tls\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strconv\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/leesin/email/html\"</span>\n    log <span class=\"token string\">\"github.com/gogap/logrus\"</span>\n    <span class=\"token string\">\"gopkg.in/gomail.v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>mailTo <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> subject <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> body <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义邮箱服务器连接信息，如果是阿里邮箱 pass填密码，qq邮箱填授权码</span>\n    mailConn <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456789@qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"授权码\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"25\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    port<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//转换端口类型为int</span>\n    m <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yw\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;\"</span><span class=\"token operator\">+</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//这种方式可以添加别名，即“XD Game”， 也可以直接用&lt;code>m.SetHeader(\"From\",mailConn[\"user\"])&lt;/code> 读者可以自行实验下效果</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To\"</span><span class=\"token punctuation\">,</span> mailTo<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//发送给多个用户</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subject\"</span><span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">)</span>                    <span class=\"token comment\">//设置邮件主题</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//设置邮件正文</span>\n    d <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewDialer</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"host\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    d<span class=\"token punctuation\">.</span>TLSConfig <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>InsecureSkipVerify<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span>\n    err <span class=\"token operator\">:=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">DialAndSend</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    subject <span class=\"token operator\">:=</span> <span class=\"token string\">\"Dobrother 运营日报\"</span>\n    body <span class=\"token operator\">:=</span> html<span class=\"token punctuation\">.</span><span class=\"token function\">LoadHtml</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// html.LoadHtml load html, return type string</span>\n\n    err <span class=\"token operator\">:=</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>MailTo<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件发送失败： \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> html<span class=\"token punctuation\">.</span>MailTo <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件成功发送至管理员: \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang 连接 Email</p>","more":"<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"crypto/tls\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strconv\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/leesin/email/html\"</span>\n    log <span class=\"token string\">\"github.com/gogap/logrus\"</span>\n    <span class=\"token string\">\"gopkg.in/gomail.v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>mailTo <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> subject <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> body <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义邮箱服务器连接信息，如果是阿里邮箱 pass填密码，qq邮箱填授权码</span>\n    mailConn <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456789@qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"授权码\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"25\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    port<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//转换端口类型为int</span>\n    m <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yw\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;\"</span><span class=\"token operator\">+</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//这种方式可以添加别名，即“XD Game”， 也可以直接用&lt;code>m.SetHeader(\"From\",mailConn[\"user\"])&lt;/code> 读者可以自行实验下效果</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To\"</span><span class=\"token punctuation\">,</span> mailTo<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//发送给多个用户</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subject\"</span><span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">)</span>                    <span class=\"token comment\">//设置邮件主题</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//设置邮件正文</span>\n    d <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewDialer</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"host\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    d<span class=\"token punctuation\">.</span>TLSConfig <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>InsecureSkipVerify<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span>\n    err <span class=\"token operator\">:=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">DialAndSend</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    subject <span class=\"token operator\">:=</span> <span class=\"token string\">\"Dobrother 运营日报\"</span>\n    body <span class=\"token operator\">:=</span> html<span class=\"token punctuation\">.</span><span class=\"token function\">LoadHtml</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// html.LoadHtml load html, return type string</span>\n\n    err <span class=\"token operator\">:=</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>MailTo<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件发送失败： \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> html<span class=\"token punctuation\">.</span>MailTo <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件成功发送至管理员: \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Golang连接Redis","date":"2021-07-19T10:19:29.000Z","_content":"Golang 如何与 Redis 进行连接并操作\n<!-- more -->\n```go\npackage main\n\nimport (\n    \"fmt\"\n    \"sync\"\n    \"time\"\n\n    \"git.ucloudadmin.com/kun/appshop/pkg/log\"\n    \"gopkg.in/redis.v4\"\n)\n\nfunc main() {\n    client := createClient()\n    defer client.Close()\n\n    stringOperation(client)\n    listOperation(client)\n    //    setOperation(client)\n    //    hashOperation(client)\n\n    connectPool(client)\n\n}\n\n// 创建 redis 客户端\nfunc createClient() *redis.Client {\n    client := redis.NewClient(&redis.Options{\n        Addr:     \"localhost:6379\",\n        Password: \"\",\n        DB:       0,\n        PoolSize: 5,\n    })\n\n    pong, err := client.Ping().Result()\n    if err != nil {\n        log.Error(\"err: \", err, \" pong: \", pong)\n    }\n\n    return client\n}\n\n// String 操作\nfunc stringOperation(client *redis.Client) {\n    fmt.Println(\"----------------------------\")\n    fmt.Println(\"stringOperation\")\n    fmt.Println(\"----------------------------\")\n    // 第三个参数设置过期时间, 如果是 0, 则表示没有过期时间\n    err := client.Set(\"age\", \"20\", 1*time.Second).Err()\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n\n    client.Incr(\"age\") // 自增\n    client.Incr(\"age\") // 自增\n    client.Decr(\"age\") // 自减\n\n    val, err := client.Get(\"age\").Result()\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"age\", val) // age 的值为21\n\n    // 因为 key \"age\" 的过期时间是一秒钟, 因此当一秒后, 此 key 会自动被删除了.\n    time.Sleep(2 * time.Second)\n    val, err = client.Get(\"age\").Result()\n    if err != nil {\n        fmt.Printf(\"error: %v\\n\", err) // 因为 key \"age\" 已经过期了, 因此会有一个 redis: nil 的错误.\n    }\n    fmt.Println(\"过期后 age: \", val)\n}\n\nfunc listOperation(client *redis.Client) {\n    fmt.Println(\"----------------------------\")\n    fmt.Println(\"listOperation\")\n    fmt.Println(\"----------------------------\")\n\n    client.RPush(\"fruit\", \"apple\")               // 在名称为 fruit 的list尾添加一个值为value的元素\n    client.LPush(\"fruit\", \"banana\")              // 在名称为 fruit 的list头添加一个值为value的 元素\n    length, err := client.LLen(\"fruit\").Result() // 返回名称为 fruit 的list的长度\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"fruit list length: \", length) // 长度为2\n\n    value, err := client.LPop(\"fruit\").Result() //返回并删除名称为 fruit 的list中的首元素\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"fruit: \", value)\n\n    value, err = client.RPop(\"fruit\").Result() // 返回并删除名称为 fruit 的list中的尾元素\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"fruit: \", value)\n    fmt.Println(\"fruit list length: \", length) // 长度为2\n}\n\n// set 操作\nfunc setOperation(client *redis.Client) {\n    client.SAdd(\"blacklist\", \"Obama\")     // 向 blacklist 中添加元素\n    client.SAdd(\"blacklist\", \"Hillary\")   // 再次添加\n    client.SAdd(\"blacklist\", \"the Elder\") // 添加新元素\n\n    client.SAdd(\"whitelist\", \"the Elder\") // 向 whitelist 添加元素\n\n    // 判断元素是否在集合中\n    isMember, err := client.SIsMember(\"blacklist\", \"Bush\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"Is Bush in blacklist: \", isMember)\n\n    // 求交集, 即既在黑名单中, 又在白名单中的元素\n    names, err := client.SInter(\"blacklist\", \"whitelist\").Result()\n    if err != nil {\n        panic(err)\n    }\n    // 获取到的元素是 \"the Elder\"\n    fmt.Println(\"Inter result: \", names)\n\n    // 获取指定集合的所有元素\n    all, err := client.SMembers(\"blacklist\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"All member: \", all)\n}\n\n// hash 操作\nfunc hashOperation(client *redis.Client) {\n    client.HSet(\"user_xys\", \"name\", \"xys\") // 向名称为 user_xys 的 hash 中添加元素 name\n    client.HSet(\"user_xys\", \"age\", \"18\")   // 向名称为 user_xys 的 hash 中添加元素 age\n\n    // 批量地向名称为 user_test 的 hash 中添加元素 name 和 age\n    client.HMSet(\"user_test\", map[string]string{\"name\": \"test\", \"age\": \"20\"})\n    // 批量获取名为 user_test 的 hash 中的指定字段的值.\n    fields, err := client.HMGet(\"user_test\", \"name\", \"age\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"fields in user_test: \", fields)\n\n    // 获取名为 user_xys 的 hash 中的字段个数\n    length, err := client.HLen(\"user_xys\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"field count in user_xys: \", length) // 字段个数为2\n\n    // 删除名为 user_test 的 age 字段\n    client.HDel(\"user_test\", \"age\")\n    age, err := client.HGet(\"user_test\", \"age\").Result()\n    if err != nil {\n        fmt.Printf(\"Get user_test age error: %v\\n\", err)\n    } else {\n        fmt.Println(\"user_test age is: \", age) // 字段个数为2\n    }\n}\n\n// redis.v4 的连接池管理\nfunc connectPool(client *redis.Client) {\n    wg := sync.WaitGroup{}\n    wg.Add(10)\n\n    for i := 0; i < 10; i++ {\n        go func() {\n            defer wg.Done()\n\n            for j := 0; j < 100; j++ {\n                client.Set(fmt.Sprintf(\"name%d\", j), fmt.Sprintf(\"xys%d\", j), 0).Err()\n                client.Get(fmt.Sprintf(\"name%d\", j)).Result()\n            }\n\n            //    fmt.Printf(\"PoolStats, TotalConns: %d, FreeConns: %d\\n\", client.PoolStats().TotalConns, client.PoolStats().FreeConns)\n        }()\n    }\n\n    wg.Wait()\n}\n\n```","source":"_posts/Golang连接Redis.md","raw":"---\nlayout: post\ntitle: Golang连接Redis\ndate: 2021-07-19 18:19:29\ntags: golang\n---\nGolang 如何与 Redis 进行连接并操作\n<!-- more -->\n```go\npackage main\n\nimport (\n    \"fmt\"\n    \"sync\"\n    \"time\"\n\n    \"git.ucloudadmin.com/kun/appshop/pkg/log\"\n    \"gopkg.in/redis.v4\"\n)\n\nfunc main() {\n    client := createClient()\n    defer client.Close()\n\n    stringOperation(client)\n    listOperation(client)\n    //    setOperation(client)\n    //    hashOperation(client)\n\n    connectPool(client)\n\n}\n\n// 创建 redis 客户端\nfunc createClient() *redis.Client {\n    client := redis.NewClient(&redis.Options{\n        Addr:     \"localhost:6379\",\n        Password: \"\",\n        DB:       0,\n        PoolSize: 5,\n    })\n\n    pong, err := client.Ping().Result()\n    if err != nil {\n        log.Error(\"err: \", err, \" pong: \", pong)\n    }\n\n    return client\n}\n\n// String 操作\nfunc stringOperation(client *redis.Client) {\n    fmt.Println(\"----------------------------\")\n    fmt.Println(\"stringOperation\")\n    fmt.Println(\"----------------------------\")\n    // 第三个参数设置过期时间, 如果是 0, 则表示没有过期时间\n    err := client.Set(\"age\", \"20\", 1*time.Second).Err()\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n\n    client.Incr(\"age\") // 自增\n    client.Incr(\"age\") // 自增\n    client.Decr(\"age\") // 自减\n\n    val, err := client.Get(\"age\").Result()\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"age\", val) // age 的值为21\n\n    // 因为 key \"age\" 的过期时间是一秒钟, 因此当一秒后, 此 key 会自动被删除了.\n    time.Sleep(2 * time.Second)\n    val, err = client.Get(\"age\").Result()\n    if err != nil {\n        fmt.Printf(\"error: %v\\n\", err) // 因为 key \"age\" 已经过期了, 因此会有一个 redis: nil 的错误.\n    }\n    fmt.Println(\"过期后 age: \", val)\n}\n\nfunc listOperation(client *redis.Client) {\n    fmt.Println(\"----------------------------\")\n    fmt.Println(\"listOperation\")\n    fmt.Println(\"----------------------------\")\n\n    client.RPush(\"fruit\", \"apple\")               // 在名称为 fruit 的list尾添加一个值为value的元素\n    client.LPush(\"fruit\", \"banana\")              // 在名称为 fruit 的list头添加一个值为value的 元素\n    length, err := client.LLen(\"fruit\").Result() // 返回名称为 fruit 的list的长度\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"fruit list length: \", length) // 长度为2\n\n    value, err := client.LPop(\"fruit\").Result() //返回并删除名称为 fruit 的list中的首元素\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"fruit: \", value)\n\n    value, err = client.RPop(\"fruit\").Result() // 返回并删除名称为 fruit 的list中的尾元素\n    if err != nil {\n        log.Error(\"err: \", err)\n    }\n    fmt.Println(\"fruit: \", value)\n    fmt.Println(\"fruit list length: \", length) // 长度为2\n}\n\n// set 操作\nfunc setOperation(client *redis.Client) {\n    client.SAdd(\"blacklist\", \"Obama\")     // 向 blacklist 中添加元素\n    client.SAdd(\"blacklist\", \"Hillary\")   // 再次添加\n    client.SAdd(\"blacklist\", \"the Elder\") // 添加新元素\n\n    client.SAdd(\"whitelist\", \"the Elder\") // 向 whitelist 添加元素\n\n    // 判断元素是否在集合中\n    isMember, err := client.SIsMember(\"blacklist\", \"Bush\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"Is Bush in blacklist: \", isMember)\n\n    // 求交集, 即既在黑名单中, 又在白名单中的元素\n    names, err := client.SInter(\"blacklist\", \"whitelist\").Result()\n    if err != nil {\n        panic(err)\n    }\n    // 获取到的元素是 \"the Elder\"\n    fmt.Println(\"Inter result: \", names)\n\n    // 获取指定集合的所有元素\n    all, err := client.SMembers(\"blacklist\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"All member: \", all)\n}\n\n// hash 操作\nfunc hashOperation(client *redis.Client) {\n    client.HSet(\"user_xys\", \"name\", \"xys\") // 向名称为 user_xys 的 hash 中添加元素 name\n    client.HSet(\"user_xys\", \"age\", \"18\")   // 向名称为 user_xys 的 hash 中添加元素 age\n\n    // 批量地向名称为 user_test 的 hash 中添加元素 name 和 age\n    client.HMSet(\"user_test\", map[string]string{\"name\": \"test\", \"age\": \"20\"})\n    // 批量获取名为 user_test 的 hash 中的指定字段的值.\n    fields, err := client.HMGet(\"user_test\", \"name\", \"age\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"fields in user_test: \", fields)\n\n    // 获取名为 user_xys 的 hash 中的字段个数\n    length, err := client.HLen(\"user_xys\").Result()\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(\"field count in user_xys: \", length) // 字段个数为2\n\n    // 删除名为 user_test 的 age 字段\n    client.HDel(\"user_test\", \"age\")\n    age, err := client.HGet(\"user_test\", \"age\").Result()\n    if err != nil {\n        fmt.Printf(\"Get user_test age error: %v\\n\", err)\n    } else {\n        fmt.Println(\"user_test age is: \", age) // 字段个数为2\n    }\n}\n\n// redis.v4 的连接池管理\nfunc connectPool(client *redis.Client) {\n    wg := sync.WaitGroup{}\n    wg.Add(10)\n\n    for i := 0; i < 10; i++ {\n        go func() {\n            defer wg.Done()\n\n            for j := 0; j < 100; j++ {\n                client.Set(fmt.Sprintf(\"name%d\", j), fmt.Sprintf(\"xys%d\", j), 0).Err()\n                client.Get(fmt.Sprintf(\"name%d\", j)).Result()\n            }\n\n            //    fmt.Printf(\"PoolStats, TotalConns: %d, FreeConns: %d\\n\", client.PoolStats().TotalConns, client.PoolStats().FreeConns)\n        }()\n    }\n\n    wg.Wait()\n}\n\n```","slug":"Golang连接Redis","published":1,"updated":"2021-07-22T03:14:35.628Z","comments":1,"photos":[],"link":"","_id":"cksegcb9q000cx34w5041g6oe","content":"<p>Golang 如何与 Redis 进行连接并操作</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"sync\"</span>\n    <span class=\"token string\">\"time\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/kun/appshop/pkg/log\"</span>\n    <span class=\"token string\">\"gopkg.in/redis.v4\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//    setOperation(client)</span>\n    <span class=\"token comment\">//    hashOperation(client)</span>\n\n    <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 创建 redis 客户端</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>redis<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span>\n        Addr<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"localhost:6379\"</span><span class=\"token punctuation\">,</span>\n        Password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        DB<span class=\"token punctuation\">:</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        PoolSize<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    pong<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\" pong: \"</span><span class=\"token punctuation\">,</span> pong<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> client\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// String 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stringOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 第三个参数设置过期时间, 如果是 0, 则表示没有过期时间</span>\n    err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Decr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自减</span>\n\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token comment\">// age 的值为21</span>\n\n    <span class=\"token comment\">// 因为 key \"age\" 的过期时间是一秒钟, 因此当一秒后, 此 key 会自动被删除了.</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 因为 key \"age\" 已经过期了, 因此会有一个 redis: nil 的错误.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过期后 age: \"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">RPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// 在名称为 fruit 的list尾添加一个值为value的元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">LPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 在名称为 fruit 的list头添加一个值为value的 元素</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回名称为 fruit 的list的长度</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//返回并删除名称为 fruit 的list中的首元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">RPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回并删除名称为 fruit 的list中的尾元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// set 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">setOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Obama\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 向 blacklist 中添加元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hillary\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 再次添加</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加新元素</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向 whitelist 添加元素</span>\n\n    <span class=\"token comment\">// 判断元素是否在集合中</span>\n    isMember<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SIsMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bush\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is Bush in blacklist: \"</span><span class=\"token punctuation\">,</span> isMember<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 求交集, 即既在黑名单中, 又在白名单中的元素</span>\n    names<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SInter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 获取到的元素是 \"the Elder\"</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inter result: \"</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取指定集合的所有元素</span>\n    all<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SMembers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All member: \"</span><span class=\"token punctuation\">,</span> all<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// hash 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">hashOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xys\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 name</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 age</span>\n\n    <span class=\"token comment\">// 批量地向名称为 user_test 的 hash 中添加元素 name 和 age</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HMSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 批量获取名为 user_test 的 hash 中的指定字段的值.</span>\n    fields<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HMGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fields in user_test: \"</span><span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取名为 user_xys 的 hash 中的字段个数</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field count in user_xys: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n\n    <span class=\"token comment\">// 删除名为 user_test 的 age 字段</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HDel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n    age<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get user_test age error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test age is: \"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// redis.v4 的连接池管理</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    wg <span class=\"token operator\">:=</span> sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xys%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token comment\">//    fmt.Printf(\"PoolStats, TotalConns: %d, FreeConns: %d\\n\", client.PoolStats().TotalConns, client.PoolStats().FreeConns)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang 如何与 Redis 进行连接并操作</p>","more":"<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"sync\"</span>\n    <span class=\"token string\">\"time\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/kun/appshop/pkg/log\"</span>\n    <span class=\"token string\">\"gopkg.in/redis.v4\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//    setOperation(client)</span>\n    <span class=\"token comment\">//    hashOperation(client)</span>\n\n    <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 创建 redis 客户端</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>redis<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span>\n        Addr<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"localhost:6379\"</span><span class=\"token punctuation\">,</span>\n        Password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        DB<span class=\"token punctuation\">:</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        PoolSize<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    pong<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\" pong: \"</span><span class=\"token punctuation\">,</span> pong<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> client\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// String 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stringOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 第三个参数设置过期时间, 如果是 0, 则表示没有过期时间</span>\n    err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Decr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自减</span>\n\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token comment\">// age 的值为21</span>\n\n    <span class=\"token comment\">// 因为 key \"age\" 的过期时间是一秒钟, 因此当一秒后, 此 key 会自动被删除了.</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 因为 key \"age\" 已经过期了, 因此会有一个 redis: nil 的错误.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过期后 age: \"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">RPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// 在名称为 fruit 的list尾添加一个值为value的元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">LPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 在名称为 fruit 的list头添加一个值为value的 元素</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回名称为 fruit 的list的长度</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//返回并删除名称为 fruit 的list中的首元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">RPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回并删除名称为 fruit 的list中的尾元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// set 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">setOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Obama\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 向 blacklist 中添加元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hillary\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 再次添加</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加新元素</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向 whitelist 添加元素</span>\n\n    <span class=\"token comment\">// 判断元素是否在集合中</span>\n    isMember<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SIsMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bush\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is Bush in blacklist: \"</span><span class=\"token punctuation\">,</span> isMember<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 求交集, 即既在黑名单中, 又在白名单中的元素</span>\n    names<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SInter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 获取到的元素是 \"the Elder\"</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inter result: \"</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取指定集合的所有元素</span>\n    all<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SMembers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All member: \"</span><span class=\"token punctuation\">,</span> all<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// hash 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">hashOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xys\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 name</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 age</span>\n\n    <span class=\"token comment\">// 批量地向名称为 user_test 的 hash 中添加元素 name 和 age</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HMSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 批量获取名为 user_test 的 hash 中的指定字段的值.</span>\n    fields<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HMGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fields in user_test: \"</span><span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取名为 user_xys 的 hash 中的字段个数</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field count in user_xys: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n\n    <span class=\"token comment\">// 删除名为 user_test 的 age 字段</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HDel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n    age<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get user_test age error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test age is: \"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// redis.v4 的连接池管理</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    wg <span class=\"token operator\">:=</span> sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xys%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token comment\">//    fmt.Printf(\"PoolStats, TotalConns: %d, FreeConns: %d\\n\", client.PoolStats().TotalConns, client.PoolStats().FreeConns)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Golang连接Mysql","date":"2021-07-19T09:47:04.000Z","_content":"\nGolang 打通 Mysql\n<!-- more -->\n\n注意：如果不使用 dn.Ping()，无法验证是否可以 ping 通 mysql\n```go\npackage main\n\nimport (\n    \"database/sql\"\n    \"fmt\"\n    \"log\"\n\n    _ \"github.com/go-sql-driver/mysql\"\n)\n\nconst (\n    username = \"root\"\n    passward = \"123456\"\n    network  = \"tcp\"\n    host     = \"192.168.0.100\"\n    port     = 3306\n    database = \"lee\"\n)\n\nfunc main() {\n    dsn := fmt.Sprintf(\"%s:%s@%s(%s:%d)/%s\", username, passward, network, host, port, database)\n\n    db, err := sql.Open(\"mysql\", dsn)\n\n    if err != nil {\n        fmt.Printf(\"Open mysql failed,err:%v\\n\", err)\n        return\n    }\n    defer db.Close()\n    err = db.Ping()\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Printf(\"Open mysql succeed\")\n    return\n}\n```","source":"_posts/Golang连接Mysql.md","raw":"---\nlayout: post\ntitle: Golang连接Mysql\ndate: 2021-07-19 17:47:04\ntags: golang\n---\n\nGolang 打通 Mysql\n<!-- more -->\n\n注意：如果不使用 dn.Ping()，无法验证是否可以 ping 通 mysql\n```go\npackage main\n\nimport (\n    \"database/sql\"\n    \"fmt\"\n    \"log\"\n\n    _ \"github.com/go-sql-driver/mysql\"\n)\n\nconst (\n    username = \"root\"\n    passward = \"123456\"\n    network  = \"tcp\"\n    host     = \"192.168.0.100\"\n    port     = 3306\n    database = \"lee\"\n)\n\nfunc main() {\n    dsn := fmt.Sprintf(\"%s:%s@%s(%s:%d)/%s\", username, passward, network, host, port, database)\n\n    db, err := sql.Open(\"mysql\", dsn)\n\n    if err != nil {\n        fmt.Printf(\"Open mysql failed,err:%v\\n\", err)\n        return\n    }\n    defer db.Close()\n    err = db.Ping()\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Printf(\"Open mysql succeed\")\n    return\n}\n```","slug":"Golang连接Mysql","published":1,"updated":"2021-07-22T03:14:43.050Z","comments":1,"photos":[],"link":"","_id":"cksegcb9r000ex34wce7gedjf","content":"<p>Golang 打通 Mysql</p>\n<span id=\"more\"></span>\n\n<p>注意：如果不使用 dn.Ping()，无法验证是否可以 ping 通 mysql</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"database/sql\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"log\"</span>\n\n    <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/go-sql-driver/mysql\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n    username <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span>\n    passward <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span>\n    network  <span class=\"token operator\">=</span> <span class=\"token string\">\"tcp\"</span>\n    host     <span class=\"token operator\">=</span> <span class=\"token string\">\"192.168.0.100\"</span>\n    port     <span class=\"token operator\">=</span> <span class=\"token number\">3306</span>\n    database <span class=\"token operator\">=</span> <span class=\"token string\">\"lee\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    dsn <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s:%s@%s(%s:%d)/%s\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> passward<span class=\"token punctuation\">,</span> network<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> database<span class=\"token punctuation\">)</span>\n\n    db<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span> dsn<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql failed,err:%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">defer</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    err <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql succeed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang 打通 Mysql</p>","more":"<p>注意：如果不使用 dn.Ping()，无法验证是否可以 ping 通 mysql</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"database/sql\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"log\"</span>\n\n    <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/go-sql-driver/mysql\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n    username <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span>\n    passward <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span>\n    network  <span class=\"token operator\">=</span> <span class=\"token string\">\"tcp\"</span>\n    host     <span class=\"token operator\">=</span> <span class=\"token string\">\"192.168.0.100\"</span>\n    port     <span class=\"token operator\">=</span> <span class=\"token number\">3306</span>\n    database <span class=\"token operator\">=</span> <span class=\"token string\">\"lee\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    dsn <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s:%s@%s(%s:%d)/%s\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> passward<span class=\"token punctuation\">,</span> network<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> database<span class=\"token punctuation\">)</span>\n\n    db<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span> dsn<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql failed,err:%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">defer</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    err <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql succeed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"k8s为服务签发证书","date":"2021-07-19T09:21:41.000Z","_content":"仅限于集群服务制作证书。\n\n<!-- more -->\n\n#### 制作证书脚本\n注意：仅限于集群服务制作证书，必须填入参数。参数1为文件夹名，参数2为 集群服务 dogbrother.prj-lee-sin.svc\n```sh\nmkdir $1\ncd $1\n\ncat > ca-config.json <<EOF\n{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"usages\": [\"signing\", \"key encipherment\", \"server auth\", \"client auth\"],\n        \"expiry\": \"8760h\"\n      }\n    }\n  }\n}\nEOF\n\ncat > ca-csr.json <<EOF\n{\n    \"CN\": \"kubernetes\",\n    \"key\": {\n        \"algo\": \"rsa\",\n        \"size\": 2048\n    },\n    \"names\": [\n        {\n            \"C\": \"CN\",\n            \"L\": \"BeiJing\",\n            \"ST\": \"BeiJing\",\n            \"O\": \"k8s\",\n            \"OU\": \"System\"\n        }\n    ]\n}\nEOF\n\ncfssl gencert -initca ca-csr.json | cfssljson -bare ca\n\ncat > server-csr.json <<EOF\n{\n  \"CN\": \"admission\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n        \"C\": \"CN\",\n        \"L\": \"BeiJing\",\n        \"ST\": \"BeiJing\",\n        \"O\": \"k8s\",\n        \"OU\": \"System\"\n    }\n  ]\n}\nEOF\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=$2 -profile=server server-csr.json | cfssljson -bare server\n\necho \"========================= ca.pem ================================\"\ncat ca.pem\necho \"========================= server.pem ================================\"\ncat server.pem\necho \"========================= server-key.pem ================================\"\ncat server-key.pem\n```","source":"_posts/k8s为服务签发证书.md","raw":"---\nlayout: post\ntitle: k8s为服务签发证书\ndate: 2021-07-19 17:21:41\ntags: \n- k8s\ncategories:\n- 开发\n---\n仅限于集群服务制作证书。\n\n<!-- more -->\n\n#### 制作证书脚本\n注意：仅限于集群服务制作证书，必须填入参数。参数1为文件夹名，参数2为 集群服务 dogbrother.prj-lee-sin.svc\n```sh\nmkdir $1\ncd $1\n\ncat > ca-config.json <<EOF\n{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"usages\": [\"signing\", \"key encipherment\", \"server auth\", \"client auth\"],\n        \"expiry\": \"8760h\"\n      }\n    }\n  }\n}\nEOF\n\ncat > ca-csr.json <<EOF\n{\n    \"CN\": \"kubernetes\",\n    \"key\": {\n        \"algo\": \"rsa\",\n        \"size\": 2048\n    },\n    \"names\": [\n        {\n            \"C\": \"CN\",\n            \"L\": \"BeiJing\",\n            \"ST\": \"BeiJing\",\n            \"O\": \"k8s\",\n            \"OU\": \"System\"\n        }\n    ]\n}\nEOF\n\ncfssl gencert -initca ca-csr.json | cfssljson -bare ca\n\ncat > server-csr.json <<EOF\n{\n  \"CN\": \"admission\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n        \"C\": \"CN\",\n        \"L\": \"BeiJing\",\n        \"ST\": \"BeiJing\",\n        \"O\": \"k8s\",\n        \"OU\": \"System\"\n    }\n  ]\n}\nEOF\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=$2 -profile=server server-csr.json | cfssljson -bare server\n\necho \"========================= ca.pem ================================\"\ncat ca.pem\necho \"========================= server.pem ================================\"\ncat server.pem\necho \"========================= server-key.pem ================================\"\ncat server-key.pem\n```","slug":"k8s为服务签发证书","published":1,"updated":"2021-08-05T09:59:24.242Z","comments":1,"photos":[],"link":"","_id":"cksegcb9r000hx34w94xb7b21","content":"<p>仅限于集群服务制作证书。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"制作证书脚本\"><a href=\"#制作证书脚本\" class=\"headerlink\" title=\"制作证书脚本\"></a>制作证书脚本</h4><p>注意：仅限于集群服务制作证书，必须填入参数。参数1为文件夹名，参数2为 集群服务 dogbrother.prj-lee-sin.svc</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">mkdir $1\ncd $1\n\ncat &gt; ca-config.json &lt;&lt;EOF\n&#123;\n  &quot;signing&quot;: &#123;\n    &quot;default&quot;: &#123;\n      &quot;expiry&quot;: &quot;8760h&quot;\n    &#125;,\n    &quot;profiles&quot;: &#123;\n      &quot;server&quot;: &#123;\n        &quot;usages&quot;: [&quot;signing&quot;, &quot;key encipherment&quot;, &quot;server auth&quot;, &quot;client auth&quot;],\n        &quot;expiry&quot;: &quot;8760h&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\nEOF\n\ncat &gt; ca-csr.json &lt;&lt;EOF\n&#123;\n    &quot;CN&quot;: &quot;kubernetes&quot;,\n    &quot;key&quot;: &#123;\n        &quot;algo&quot;: &quot;rsa&quot;,\n        &quot;size&quot;: 2048\n    &#125;,\n    &quot;names&quot;: [\n        &#123;\n            &quot;C&quot;: &quot;CN&quot;,\n            &quot;L&quot;: &quot;BeiJing&quot;,\n            &quot;ST&quot;: &quot;BeiJing&quot;,\n            &quot;O&quot;: &quot;k8s&quot;,\n            &quot;OU&quot;: &quot;System&quot;\n        &#125;\n    ]\n&#125;\nEOF\n\ncfssl gencert -initca ca-csr.json | cfssljson -bare ca\n\ncat &gt; server-csr.json &lt;&lt;EOF\n&#123;\n  &quot;CN&quot;: &quot;admission&quot;,\n  &quot;key&quot;: &#123;\n    &quot;algo&quot;: &quot;rsa&quot;,\n    &quot;size&quot;: 2048\n  &#125;,\n  &quot;names&quot;: [\n    &#123;\n        &quot;C&quot;: &quot;CN&quot;,\n        &quot;L&quot;: &quot;BeiJing&quot;,\n        &quot;ST&quot;: &quot;BeiJing&quot;,\n        &quot;O&quot;: &quot;k8s&quot;,\n        &quot;OU&quot;: &quot;System&quot;\n    &#125;\n  ]\n&#125;\nEOF\n\ncfssl gencert -ca&#x3D;ca.pem -ca-key&#x3D;ca-key.pem -config&#x3D;ca-config.json -hostname&#x3D;$2 -profile&#x3D;server server-csr.json | cfssljson -bare server\n\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; ca.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat ca.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server-key.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server-key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>仅限于集群服务制作证书。</p>","more":"<h4 id=\"制作证书脚本\"><a href=\"#制作证书脚本\" class=\"headerlink\" title=\"制作证书脚本\"></a>制作证书脚本</h4><p>注意：仅限于集群服务制作证书，必须填入参数。参数1为文件夹名，参数2为 集群服务 dogbrother.prj-lee-sin.svc</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">mkdir $1\ncd $1\n\ncat &gt; ca-config.json &lt;&lt;EOF\n&#123;\n  &quot;signing&quot;: &#123;\n    &quot;default&quot;: &#123;\n      &quot;expiry&quot;: &quot;8760h&quot;\n    &#125;,\n    &quot;profiles&quot;: &#123;\n      &quot;server&quot;: &#123;\n        &quot;usages&quot;: [&quot;signing&quot;, &quot;key encipherment&quot;, &quot;server auth&quot;, &quot;client auth&quot;],\n        &quot;expiry&quot;: &quot;8760h&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\nEOF\n\ncat &gt; ca-csr.json &lt;&lt;EOF\n&#123;\n    &quot;CN&quot;: &quot;kubernetes&quot;,\n    &quot;key&quot;: &#123;\n        &quot;algo&quot;: &quot;rsa&quot;,\n        &quot;size&quot;: 2048\n    &#125;,\n    &quot;names&quot;: [\n        &#123;\n            &quot;C&quot;: &quot;CN&quot;,\n            &quot;L&quot;: &quot;BeiJing&quot;,\n            &quot;ST&quot;: &quot;BeiJing&quot;,\n            &quot;O&quot;: &quot;k8s&quot;,\n            &quot;OU&quot;: &quot;System&quot;\n        &#125;\n    ]\n&#125;\nEOF\n\ncfssl gencert -initca ca-csr.json | cfssljson -bare ca\n\ncat &gt; server-csr.json &lt;&lt;EOF\n&#123;\n  &quot;CN&quot;: &quot;admission&quot;,\n  &quot;key&quot;: &#123;\n    &quot;algo&quot;: &quot;rsa&quot;,\n    &quot;size&quot;: 2048\n  &#125;,\n  &quot;names&quot;: [\n    &#123;\n        &quot;C&quot;: &quot;CN&quot;,\n        &quot;L&quot;: &quot;BeiJing&quot;,\n        &quot;ST&quot;: &quot;BeiJing&quot;,\n        &quot;O&quot;: &quot;k8s&quot;,\n        &quot;OU&quot;: &quot;System&quot;\n    &#125;\n  ]\n&#125;\nEOF\n\ncfssl gencert -ca&#x3D;ca.pem -ca-key&#x3D;ca-key.pem -config&#x3D;ca-config.json -hostname&#x3D;$2 -profile&#x3D;server server-csr.json | cfssljson -bare server\n\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; ca.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat ca.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server-key.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server-key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"kubeadm的脚本部署","date":"2021-07-19T09:41:20.000Z","_content":"一键部署kubeadm脚本\n<!-- more -->\n\n```sh\n# master: 安装docker、kubeadm、kubectl、kubelet、flannel\n\nif (( $# != 1 )); then\n  echo -e \"\\033[31m参数个数有误，请重新输入\\033[0m\"\n  echo -e \"\\033[31m脚本为安装kubeadm使用，你可以通过参数来选择node节点、master节点\\033[0m\"\n  return 0 \nfi\n###############\n#   docker    #\n###############\n\n# 安装依赖包\nsudo yum install -y yum-utils\n\n# 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。\n# 执行下面的命令添加 yum 软件源\nsudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\nsudo sed -i 's/download.docker.com/mirrors.aliyun.com\\/docker-ce/g' /etc/yum.repos.d/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n#     --add-repo \\\n#     https://download.docker.com/linux/centos/docker-ce.repo\n\n\n# 更新 yum 软件源缓存，并安装 docker-ce\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# 测试 Docker 是否安装正确\n# docker run --rm hello-world\n\n# 阿里云镜像加速\nmkdir -p /etc/docker\ncat >/etc/docker/daemon.json << EOF\n{\n  \"registry-mirrors\": [\"https://9yepy6z6.mirror.aliyuncs.com\"]\n}\nEOF\n\n# 启动 Docker\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo systemctl status docker\n# sudo systemctl daemon-reload\n# sudo systemctl restart docker\n\n\n###############\n#   kubeadm   #\n###############\n\n# 关闭 swap 分区\nswapoff  -a\nsed -ri 's/.*swap.*/#&/' /etc/fstab\n\n# 安装 kubelet kubeadm kubectl\ncat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\nsudo yum install -y kubelet kubeadm kubectl\n\n# 修改内核的运行参数\ncat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.ipv4.ip_forward                 = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nEOF\n\nsysctl --system\n\nsystemctl start kubelet.service\n# 这里可能没有kubelet.service.d目录，可以手动创建\ncd /etc/systemd/system\nmkdir kubelet.service.d\ncat > /etc/systemd/system/kubelet.service.d/10-proxy-ipvs.conf <<EOF\n# 启用 ipvs 相关内核模块\n[Service]\nExecStartPre=-/sbin/modprobe ip_vs\nExecStartPre=-/sbin/modprobe ip_vs_rr\nExecStartPre=-/sbin/modprobe ip_vs_wrr\nExecStartPre=-/sbin/modprobe ip_vs_sh\nEOF\n\n\n###############\n#     部署     #\n###############\n\n# master\nif [ $1 == \"master\" ]; then\n# --pod-network-cidr 10.244.0.0/16 参数与后续 CNI 插件有关，这里以 flannel 为例，若后续部署其他类型的网络插件请更改此参数。\n# 执行可能出现错误，例如缺少依赖包，根据提示安装即可。\nsudo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \\\n      --pod-network-cidr 10.244.0.0/16 \\\n      --v 5 \\\n      --ignore-preflight-errors=all\n\n# 部署 CNI\n# 这里以 flannel 为例进行介绍。\n# flannel\ncurl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n\n\n# 使用kubectl访问集群\nmkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n\n###############\n#   flannel   #\n###############\ncurl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n# 这里注意kube-flannel.yml这个文件里的flannel的镜像是0.11.0，quay.io/coreos/flannel:v0.11.0-amd64\n\nelif [ $1 == \"node\" ]; then\nmodprobe br_netfilter\necho 1 > /proc/sys/net/bridge/bridge-nf-call-iptables\necho 1 > /proc/sys/net/ipv4/ip_forward\n\nkubeadm join 10.23.239.33:6443 --token enmicf.mfsf34hx54swtrkr \\\n    --discovery-token-ca-cert-hash sha256:0456ad35df4cbff8d5ca6ced7f34cc21c3ed4e3674989eb2e4545e55ec252f00\nfi\n\n\n# 执行以下命令应用配置。\nsudo systemctl daemon-reload\n\nsystemctl enable kubelet.service\nsystemctl restart kubelet.service\nsystemctl status kubelet.service\n\n```","source":"_posts/kubeadm的脚本部署.md","raw":"---\nlayout: post\ntitle: kubeadm的脚本部署\ndate: 2021-07-19 17:41:20\ntags: \n- k8s\n- 安装部署\n---\n一键部署kubeadm脚本\n<!-- more -->\n\n```sh\n# master: 安装docker、kubeadm、kubectl、kubelet、flannel\n\nif (( $# != 1 )); then\n  echo -e \"\\033[31m参数个数有误，请重新输入\\033[0m\"\n  echo -e \"\\033[31m脚本为安装kubeadm使用，你可以通过参数来选择node节点、master节点\\033[0m\"\n  return 0 \nfi\n###############\n#   docker    #\n###############\n\n# 安装依赖包\nsudo yum install -y yum-utils\n\n# 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。\n# 执行下面的命令添加 yum 软件源\nsudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\nsudo sed -i 's/download.docker.com/mirrors.aliyun.com\\/docker-ce/g' /etc/yum.repos.d/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n#     --add-repo \\\n#     https://download.docker.com/linux/centos/docker-ce.repo\n\n\n# 更新 yum 软件源缓存，并安装 docker-ce\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# 测试 Docker 是否安装正确\n# docker run --rm hello-world\n\n# 阿里云镜像加速\nmkdir -p /etc/docker\ncat >/etc/docker/daemon.json << EOF\n{\n  \"registry-mirrors\": [\"https://9yepy6z6.mirror.aliyuncs.com\"]\n}\nEOF\n\n# 启动 Docker\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo systemctl status docker\n# sudo systemctl daemon-reload\n# sudo systemctl restart docker\n\n\n###############\n#   kubeadm   #\n###############\n\n# 关闭 swap 分区\nswapoff  -a\nsed -ri 's/.*swap.*/#&/' /etc/fstab\n\n# 安装 kubelet kubeadm kubectl\ncat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\nsudo yum install -y kubelet kubeadm kubectl\n\n# 修改内核的运行参数\ncat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.ipv4.ip_forward                 = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nEOF\n\nsysctl --system\n\nsystemctl start kubelet.service\n# 这里可能没有kubelet.service.d目录，可以手动创建\ncd /etc/systemd/system\nmkdir kubelet.service.d\ncat > /etc/systemd/system/kubelet.service.d/10-proxy-ipvs.conf <<EOF\n# 启用 ipvs 相关内核模块\n[Service]\nExecStartPre=-/sbin/modprobe ip_vs\nExecStartPre=-/sbin/modprobe ip_vs_rr\nExecStartPre=-/sbin/modprobe ip_vs_wrr\nExecStartPre=-/sbin/modprobe ip_vs_sh\nEOF\n\n\n###############\n#     部署     #\n###############\n\n# master\nif [ $1 == \"master\" ]; then\n# --pod-network-cidr 10.244.0.0/16 参数与后续 CNI 插件有关，这里以 flannel 为例，若后续部署其他类型的网络插件请更改此参数。\n# 执行可能出现错误，例如缺少依赖包，根据提示安装即可。\nsudo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \\\n      --pod-network-cidr 10.244.0.0/16 \\\n      --v 5 \\\n      --ignore-preflight-errors=all\n\n# 部署 CNI\n# 这里以 flannel 为例进行介绍。\n# flannel\ncurl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n\n\n# 使用kubectl访问集群\nmkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n\n###############\n#   flannel   #\n###############\ncurl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n# 这里注意kube-flannel.yml这个文件里的flannel的镜像是0.11.0，quay.io/coreos/flannel:v0.11.0-amd64\n\nelif [ $1 == \"node\" ]; then\nmodprobe br_netfilter\necho 1 > /proc/sys/net/bridge/bridge-nf-call-iptables\necho 1 > /proc/sys/net/ipv4/ip_forward\n\nkubeadm join 10.23.239.33:6443 --token enmicf.mfsf34hx54swtrkr \\\n    --discovery-token-ca-cert-hash sha256:0456ad35df4cbff8d5ca6ced7f34cc21c3ed4e3674989eb2e4545e55ec252f00\nfi\n\n\n# 执行以下命令应用配置。\nsudo systemctl daemon-reload\n\nsystemctl enable kubelet.service\nsystemctl restart kubelet.service\nsystemctl status kubelet.service\n\n```","slug":"kubeadm的脚本部署","published":1,"updated":"2021-07-20T06:46:39.797Z","comments":1,"photos":[],"link":"","_id":"cksegcb9s000jx34wcii548xj","content":"<p>一键部署kubeadm脚本</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># master: 安装docker、kubeadm、kubectl、kubelet、flannel\n\nif (( $# !&#x3D; 1 )); then\n  echo -e &quot;\\033[31m参数个数有误，请重新输入\\033[0m&quot;\n  echo -e &quot;\\033[31m脚本为安装kubeadm使用，你可以通过参数来选择node节点、master节点\\033[0m&quot;\n  return 0 \nfi\n###############\n#   docker    #\n###############\n\n# 安装依赖包\nsudo yum install -y yum-utils\n\n# 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。\n# 执行下面的命令添加 yum 软件源\nsudo yum-config-manager \\\n    --add-repo \\\n    https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\nsudo sed -i &#39;s&#x2F;download.docker.com&#x2F;mirrors.aliyun.com\\&#x2F;docker-ce&#x2F;g&#39; &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n#     --add-repo \\\n#     https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\n\n# 更新 yum 软件源缓存，并安装 docker-ce\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# 测试 Docker 是否安装正确\n# docker run --rm hello-world\n\n# 阿里云镜像加速\nmkdir -p &#x2F;etc&#x2F;docker\ncat &gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF\n&#123;\n  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;9yepy6z6.mirror.aliyuncs.com&quot;]\n&#125;\nEOF\n\n# 启动 Docker\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo systemctl status docker\n# sudo systemctl daemon-reload\n# sudo systemctl restart docker\n\n\n###############\n#   kubeadm   #\n###############\n\n# 关闭 swap 分区\nswapoff  -a\nsed -ri &#39;s&#x2F;.*swap.*&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab\n\n# 安装 kubelet kubeadm kubectl\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;\nenabled&#x3D;1\ngpgcheck&#x3D;1\nrepo_gpgcheck&#x3D;1\ngpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\nEOF\n\nsudo yum install -y kubelet kubeadm kubectl\n\n# 修改内核的运行参数\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;sysctl.d&#x2F;99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  &#x3D; 1\nnet.ipv4.ip_forward                 &#x3D; 1\nnet.bridge.bridge-nf-call-ip6tables &#x3D; 1\nEOF\n\nsysctl --system\n\nsystemctl start kubelet.service\n# 这里可能没有kubelet.service.d目录，可以手动创建\ncd &#x2F;etc&#x2F;systemd&#x2F;system\nmkdir kubelet.service.d\ncat &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;kubelet.service.d&#x2F;10-proxy-ipvs.conf &lt;&lt;EOF\n# 启用 ipvs 相关内核模块\n[Service]\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_rr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_wrr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_sh\nEOF\n\n\n###############\n#     部署     #\n###############\n\n# master\nif [ $1 &#x3D;&#x3D; &quot;master&quot; ]; then\n# --pod-network-cidr 10.244.0.0&#x2F;16 参数与后续 CNI 插件有关，这里以 flannel 为例，若后续部署其他类型的网络插件请更改此参数。\n# 执行可能出现错误，例如缺少依赖包，根据提示安装即可。\nsudo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers \\\n      --pod-network-cidr 10.244.0.0&#x2F;16 \\\n      --v 5 \\\n      --ignore-preflight-errors&#x3D;all\n\n# 部署 CNI\n# 这里以 flannel 为例进行介绍。\n# flannel\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n\n\n# 使用kubectl访问集群\nmkdir -p $HOME&#x2F;.kube\ncp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config\n\n###############\n#   flannel   #\n###############\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n# 这里注意kube-flannel.yml这个文件里的flannel的镜像是0.11.0，quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64\n\nelif [ $1 &#x3D;&#x3D; &quot;node&quot; ]; then\nmodprobe br_netfilter\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;bridge&#x2F;bridge-nf-call-iptables\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward\n\nkubeadm join 10.23.239.33:6443 --token enmicf.mfsf34hx54swtrkr \\\n    --discovery-token-ca-cert-hash sha256:0456ad35df4cbff8d5ca6ced7f34cc21c3ed4e3674989eb2e4545e55ec252f00\nfi\n\n\n# 执行以下命令应用配置。\nsudo systemctl daemon-reload\n\nsystemctl enable kubelet.service\nsystemctl restart kubelet.service\nsystemctl status kubelet.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>一键部署kubeadm脚本</p>","more":"<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># master: 安装docker、kubeadm、kubectl、kubelet、flannel\n\nif (( $# !&#x3D; 1 )); then\n  echo -e &quot;\\033[31m参数个数有误，请重新输入\\033[0m&quot;\n  echo -e &quot;\\033[31m脚本为安装kubeadm使用，你可以通过参数来选择node节点、master节点\\033[0m&quot;\n  return 0 \nfi\n###############\n#   docker    #\n###############\n\n# 安装依赖包\nsudo yum install -y yum-utils\n\n# 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。\n# 执行下面的命令添加 yum 软件源\nsudo yum-config-manager \\\n    --add-repo \\\n    https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\nsudo sed -i &#39;s&#x2F;download.docker.com&#x2F;mirrors.aliyun.com\\&#x2F;docker-ce&#x2F;g&#39; &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n#     --add-repo \\\n#     https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\n\n# 更新 yum 软件源缓存，并安装 docker-ce\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# 测试 Docker 是否安装正确\n# docker run --rm hello-world\n\n# 阿里云镜像加速\nmkdir -p &#x2F;etc&#x2F;docker\ncat &gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF\n&#123;\n  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;9yepy6z6.mirror.aliyuncs.com&quot;]\n&#125;\nEOF\n\n# 启动 Docker\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo systemctl status docker\n# sudo systemctl daemon-reload\n# sudo systemctl restart docker\n\n\n###############\n#   kubeadm   #\n###############\n\n# 关闭 swap 分区\nswapoff  -a\nsed -ri &#39;s&#x2F;.*swap.*&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab\n\n# 安装 kubelet kubeadm kubectl\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;\nenabled&#x3D;1\ngpgcheck&#x3D;1\nrepo_gpgcheck&#x3D;1\ngpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\nEOF\n\nsudo yum install -y kubelet kubeadm kubectl\n\n# 修改内核的运行参数\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;sysctl.d&#x2F;99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  &#x3D; 1\nnet.ipv4.ip_forward                 &#x3D; 1\nnet.bridge.bridge-nf-call-ip6tables &#x3D; 1\nEOF\n\nsysctl --system\n\nsystemctl start kubelet.service\n# 这里可能没有kubelet.service.d目录，可以手动创建\ncd &#x2F;etc&#x2F;systemd&#x2F;system\nmkdir kubelet.service.d\ncat &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;kubelet.service.d&#x2F;10-proxy-ipvs.conf &lt;&lt;EOF\n# 启用 ipvs 相关内核模块\n[Service]\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_rr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_wrr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_sh\nEOF\n\n\n###############\n#     部署     #\n###############\n\n# master\nif [ $1 &#x3D;&#x3D; &quot;master&quot; ]; then\n# --pod-network-cidr 10.244.0.0&#x2F;16 参数与后续 CNI 插件有关，这里以 flannel 为例，若后续部署其他类型的网络插件请更改此参数。\n# 执行可能出现错误，例如缺少依赖包，根据提示安装即可。\nsudo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers \\\n      --pod-network-cidr 10.244.0.0&#x2F;16 \\\n      --v 5 \\\n      --ignore-preflight-errors&#x3D;all\n\n# 部署 CNI\n# 这里以 flannel 为例进行介绍。\n# flannel\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n\n\n# 使用kubectl访问集群\nmkdir -p $HOME&#x2F;.kube\ncp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config\n\n###############\n#   flannel   #\n###############\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n# 这里注意kube-flannel.yml这个文件里的flannel的镜像是0.11.0，quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64\n\nelif [ $1 &#x3D;&#x3D; &quot;node&quot; ]; then\nmodprobe br_netfilter\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;bridge&#x2F;bridge-nf-call-iptables\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward\n\nkubeadm join 10.23.239.33:6443 --token enmicf.mfsf34hx54swtrkr \\\n    --discovery-token-ca-cert-hash sha256:0456ad35df4cbff8d5ca6ced7f34cc21c3ed4e3674989eb2e4545e55ec252f00\nfi\n\n\n# 执行以下命令应用配置。\nsudo systemctl daemon-reload\n\nsystemctl enable kubelet.service\nsystemctl restart kubelet.service\nsystemctl status kubelet.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"如何写一个systemd服务","date":"2021-07-19T09:40:06.000Z","_content":"如何写一个systemd服务\n<!-- more -->\n```sh\n[Unit]\nDescription=yuru-web   \t\t# 简单描述服务\nAfter=network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\n\n[Service]\nWorkingDirectory=/root/xiaoxie/web\nExecStart=/root/xiaoxie/web/yuru-web    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\n```\n\n#### 模版\n```sh\n[Unit]\nDescription=test   \t\t# 简单描述服务\nAfter=network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\nBefore=xxx.service      # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。\n\n[Service]\nType=forking     \t\t# 设置服务的启动方式\nUser=USER        \t\t# 设置服务运行的用户\nGroup=USER       \t\t# 设置服务运行的用户组\nWorkingDirectory=/PATH\t# 设置服务运行的路径(cwd)\nKillMode=control-group  # 定义systemd如何停止服务\nRestart=no        \t\t# 定义服务进程退出后，systemd的重启方式，默认是不重启\nExecStart=/start.sh    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\nWantedBy=multi-user.target  # 多用户\n```\n#### 保存目录\n```sh\n/etc/systemd/system\n/usr/lib/systemd/system/vsftpd.service\n```\n\n#### 重载\n```sh\nsystemctl daemon-reload\n```","source":"_posts/如何写一个systemd服务.md","raw":"---\nlayout: post\ntitle: 如何写一个systemd服务\ndate: 2021-07-19 17:40:06\ntags: linux\n---\n如何写一个systemd服务\n<!-- more -->\n```sh\n[Unit]\nDescription=yuru-web   \t\t# 简单描述服务\nAfter=network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\n\n[Service]\nWorkingDirectory=/root/xiaoxie/web\nExecStart=/root/xiaoxie/web/yuru-web    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\n```\n\n#### 模版\n```sh\n[Unit]\nDescription=test   \t\t# 简单描述服务\nAfter=network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\nBefore=xxx.service      # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。\n\n[Service]\nType=forking     \t\t# 设置服务的启动方式\nUser=USER        \t\t# 设置服务运行的用户\nGroup=USER       \t\t# 设置服务运行的用户组\nWorkingDirectory=/PATH\t# 设置服务运行的路径(cwd)\nKillMode=control-group  # 定义systemd如何停止服务\nRestart=no        \t\t# 定义服务进程退出后，systemd的重启方式，默认是不重启\nExecStart=/start.sh    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\nWantedBy=multi-user.target  # 多用户\n```\n#### 保存目录\n```sh\n/etc/systemd/system\n/usr/lib/systemd/system/vsftpd.service\n```\n\n#### 重载\n```sh\nsystemctl daemon-reload\n```","slug":"如何写一个systemd服务","published":1,"updated":"2021-07-19T10:45:08.170Z","comments":1,"photos":[],"link":"","_id":"cksegcb9t000nx34whqi423qc","content":"<p>如何写一个systemd服务</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;yuru-web   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\n\n[Service]\nWorkingDirectory&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web\nExecStart&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web&#x2F;yuru-web    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;test   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\nBefore&#x3D;xxx.service      # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。\n\n[Service]\nType&#x3D;forking     \t\t# 设置服务的启动方式\nUser&#x3D;USER        \t\t# 设置服务运行的用户\nGroup&#x3D;USER       \t\t# 设置服务运行的用户组\nWorkingDirectory&#x3D;&#x2F;PATH\t# 设置服务运行的路径(cwd)\nKillMode&#x3D;control-group  # 定义systemd如何停止服务\nRestart&#x3D;no        \t\t# 定义服务进程退出后，systemd的重启方式，默认是不重启\nExecStart&#x3D;&#x2F;start.sh    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\nWantedBy&#x3D;multi-user.target  # 多用户<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"保存目录\"><a href=\"#保存目录\" class=\"headerlink\" title=\"保存目录\"></a>保存目录</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">&#x2F;etc&#x2F;systemd&#x2F;system\n&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vsftpd.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"重载\"><a href=\"#重载\" class=\"headerlink\" title=\"重载\"></a>重载</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">systemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>如何写一个systemd服务</p>","more":"<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;yuru-web   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\n\n[Service]\nWorkingDirectory&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web\nExecStart&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web&#x2F;yuru-web    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;test   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\nBefore&#x3D;xxx.service      # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。\n\n[Service]\nType&#x3D;forking     \t\t# 设置服务的启动方式\nUser&#x3D;USER        \t\t# 设置服务运行的用户\nGroup&#x3D;USER       \t\t# 设置服务运行的用户组\nWorkingDirectory&#x3D;&#x2F;PATH\t# 设置服务运行的路径(cwd)\nKillMode&#x3D;control-group  # 定义systemd如何停止服务\nRestart&#x3D;no        \t\t# 定义服务进程退出后，systemd的重启方式，默认是不重启\nExecStart&#x3D;&#x2F;start.sh    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\nWantedBy&#x3D;multi-user.target  # 多用户<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"保存目录\"><a href=\"#保存目录\" class=\"headerlink\" title=\"保存目录\"></a>保存目录</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">&#x2F;etc&#x2F;systemd&#x2F;system\n&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vsftpd.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"重载\"><a href=\"#重载\" class=\"headerlink\" title=\"重载\"></a>重载</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">systemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>"},{"layout":"post","title":"Golang连接Shell","date":"2021-07-19T10:40:36.000Z","_content":"Golang 如何执行 Shell 命令\n<!-- more -->\n```go\nfunc main() {\n        command := `./git-back.sh .`\n        cmd := exec.Command(\"/bin/bash\", \"-c\", command)\n\n        err := cmd.Run()\n        if err != nil {\n                fmt.Println(\"Execute Command failed:\" + err.Error())\n                return\n        }\n\n        fmt.Println(\"Execute Command finished.\")\n}\n```","source":"_posts/Golang连接Shell.md","raw":"---\nlayout: post\ntitle: Golang连接Shell\ndate: 2021-07-19 18:40:36\ntags: golang\n---\nGolang 如何执行 Shell 命令\n<!-- more -->\n```go\nfunc main() {\n        command := `./git-back.sh .`\n        cmd := exec.Command(\"/bin/bash\", \"-c\", command)\n\n        err := cmd.Run()\n        if err != nil {\n                fmt.Println(\"Execute Command failed:\" + err.Error())\n                return\n        }\n\n        fmt.Println(\"Execute Command finished.\")\n}\n```","slug":"Golang连接Shell","published":1,"updated":"2021-07-22T03:14:14.334Z","comments":1,"photos":[],"link":"","_id":"cksegcb9t000px34w1hnzei97","content":"<p>Golang 如何执行 Shell 命令</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        command <span class=\"token operator\">:=</span> <span class=\"token string\">`./git-back.sh .`</span>\n        cmd <span class=\"token operator\">:=</span> exec<span class=\"token punctuation\">.</span><span class=\"token function\">Command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execute Command failed:\"</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execute Command finished.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>Golang 如何执行 Shell 命令</p>","more":"<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        command <span class=\"token operator\">:=</span> <span class=\"token string\">`./git-back.sh .`</span>\n        cmd <span class=\"token operator\">:=</span> exec<span class=\"token punctuation\">.</span><span class=\"token function\">Command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execute Command failed:\"</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execute Command finished.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"operator-sdk如何使用","date":"2021-07-20T06:30:49.000Z","_content":"\n快速生成operator框架\n<!-- more -->\n\n## 环境\n\noperator-sdk版本：\n\n```sh\noperator-sdk version\noperator-sdk version: \"v1.9.0-2-g9fa13f31\", commit: \"9fa13f31e2b265253c105315ee12cc439e7b4174\", kubernetes version: \"v1.20.2\", go version: \"go1.16.2\", GOOS: \"darwin\", GOARCH: \"arm64\"\n```\n\n开发环境：MacOs\n\n## 我们首先进入一个项目，对项目进行初始化\n\n```sh\noperator-sdk init --domain example.com\n```\n\n## 创建一个资源对象 MultiService\n\n```sh\noperator-sdk create api --group multiservice --version v1 --kind MultiService --resource=true --controller=true --namespaced=true\n```\n\n## 对Spec字段进行更改，将MultiService结构体改为\n\n```go\ntype MultiServiceSpec struct {\n    Service string `json:\"service,omitempty\"`\n}\n```\n\n## 更新CRD文件\n\n```sh\nmake manifests\n```\n\n## 开发\n\nOperator SDK 为我们创建了一个快速启动的代码和相关配置，如果我们要开始处理相关的逻辑，我们可以在项目中搜索TODO(user)这个注释来实现我们自己的逻辑，比如在我的 VSCode 环境中，看上去是这样的：\n```go\nfunc (r *MultiService4Reconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {\n    _ = log.FromContext(ctx)\n\n    // your logic here\n    return ctrl.Result{}, nil\n}\n```\n\n## 部署 crd\n\n```sh\nkubectl apply -f config/crd/bases/xx.yaml\n```\n\n## 编写 cr\n\n```yaml\n# 这里的 multiservice.example.com/v1\n# multiservice 是根据 --group multiservice 而来,\n# example.com 是根据 operator-sdk init --domain example.com 而来。\n# v1 是根据 --version v1 而来。\napiVersion: multiservice.example.com/v1\nkind: MultiService\nmetadata:\n  name: service\nspec:\n  service: hello-world\n```\n\n## 监听的 cr 范围\n\n在 main.go 中的 ctrl.NewManage 处可以对其 NameSpace参数进行修改。\"\"代表监听所有。（如果没有可以之间新增NameSpace字段）\n\n## 获取对应事件\n\n```go\n// 部署后才会触发Reconcile\nfunc (r *MultiService4Reconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {\n\treqLogger := ctrl.Log.WithName(\"reconcile\")\n    reqLogger.Info(\"Reconciling MultiService4\")\n\n\tvar err error\n\tms4 := &multi4.MultiService4{}\n\n\tif err = r.Get(ctx, req.NamespacedName, ms4); err != nil {\n\t\tif errors.IsNotFound(err) {\n\t\t\tfmt.Println(\"Delete\")\n\t\t\treturn reconciled()\n\t\t}\n\t\treturn requeueWithError(reqLogger, err.Error(), err)\n\t}\n\tif ms4.Generation != 1 {\n\t\tfmt.Println(\"Update\")\n\t} else {\n\t\tfmt.Println(\"Add\")\n\t}\n\n\treturn ctrl.Result{}, nil\n}\n```\n\n##### 注意\n\noperator-sdk 不同版本之间的命令行参数有很多不同，如果本文与你的环境有差异，请移步[operator-sdk官网](https://sdk.operatorframework.io/)。","source":"_posts/operator-sdk如何使用.md","raw":"---\nlayout: post\ntitle: operator-sdk如何使用\ndate: 2021-07-20 14:30:49\ntags: 开发\n---\n\n快速生成operator框架\n<!-- more -->\n\n## 环境\n\noperator-sdk版本：\n\n```sh\noperator-sdk version\noperator-sdk version: \"v1.9.0-2-g9fa13f31\", commit: \"9fa13f31e2b265253c105315ee12cc439e7b4174\", kubernetes version: \"v1.20.2\", go version: \"go1.16.2\", GOOS: \"darwin\", GOARCH: \"arm64\"\n```\n\n开发环境：MacOs\n\n## 我们首先进入一个项目，对项目进行初始化\n\n```sh\noperator-sdk init --domain example.com\n```\n\n## 创建一个资源对象 MultiService\n\n```sh\noperator-sdk create api --group multiservice --version v1 --kind MultiService --resource=true --controller=true --namespaced=true\n```\n\n## 对Spec字段进行更改，将MultiService结构体改为\n\n```go\ntype MultiServiceSpec struct {\n    Service string `json:\"service,omitempty\"`\n}\n```\n\n## 更新CRD文件\n\n```sh\nmake manifests\n```\n\n## 开发\n\nOperator SDK 为我们创建了一个快速启动的代码和相关配置，如果我们要开始处理相关的逻辑，我们可以在项目中搜索TODO(user)这个注释来实现我们自己的逻辑，比如在我的 VSCode 环境中，看上去是这样的：\n```go\nfunc (r *MultiService4Reconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {\n    _ = log.FromContext(ctx)\n\n    // your logic here\n    return ctrl.Result{}, nil\n}\n```\n\n## 部署 crd\n\n```sh\nkubectl apply -f config/crd/bases/xx.yaml\n```\n\n## 编写 cr\n\n```yaml\n# 这里的 multiservice.example.com/v1\n# multiservice 是根据 --group multiservice 而来,\n# example.com 是根据 operator-sdk init --domain example.com 而来。\n# v1 是根据 --version v1 而来。\napiVersion: multiservice.example.com/v1\nkind: MultiService\nmetadata:\n  name: service\nspec:\n  service: hello-world\n```\n\n## 监听的 cr 范围\n\n在 main.go 中的 ctrl.NewManage 处可以对其 NameSpace参数进行修改。\"\"代表监听所有。（如果没有可以之间新增NameSpace字段）\n\n## 获取对应事件\n\n```go\n// 部署后才会触发Reconcile\nfunc (r *MultiService4Reconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {\n\treqLogger := ctrl.Log.WithName(\"reconcile\")\n    reqLogger.Info(\"Reconciling MultiService4\")\n\n\tvar err error\n\tms4 := &multi4.MultiService4{}\n\n\tif err = r.Get(ctx, req.NamespacedName, ms4); err != nil {\n\t\tif errors.IsNotFound(err) {\n\t\t\tfmt.Println(\"Delete\")\n\t\t\treturn reconciled()\n\t\t}\n\t\treturn requeueWithError(reqLogger, err.Error(), err)\n\t}\n\tif ms4.Generation != 1 {\n\t\tfmt.Println(\"Update\")\n\t} else {\n\t\tfmt.Println(\"Add\")\n\t}\n\n\treturn ctrl.Result{}, nil\n}\n```\n\n##### 注意\n\noperator-sdk 不同版本之间的命令行参数有很多不同，如果本文与你的环境有差异，请移步[operator-sdk官网](https://sdk.operatorframework.io/)。","slug":"operator-sdk如何使用","published":1,"updated":"2021-07-22T03:13:33.490Z","comments":1,"photos":[],"link":"","_id":"cksegcb9u000rx34wa6j29h05","content":"<p>快速生成operator框架</p>\n<span id=\"more\"></span>\n\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>operator-sdk版本：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk version\noperator-sdk version: &quot;v1.9.0-2-g9fa13f31&quot;, commit: &quot;9fa13f31e2b265253c105315ee12cc439e7b4174&quot;, kubernetes version: &quot;v1.20.2&quot;, go version: &quot;go1.16.2&quot;, GOOS: &quot;darwin&quot;, GOARCH: &quot;arm64&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>开发环境：MacOs</p>\n<h2 id=\"我们首先进入一个项目，对项目进行初始化\"><a href=\"#我们首先进入一个项目，对项目进行初始化\" class=\"headerlink\" title=\"我们首先进入一个项目，对项目进行初始化\"></a>我们首先进入一个项目，对项目进行初始化</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk init --domain example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"创建一个资源对象-MultiService\"><a href=\"#创建一个资源对象-MultiService\" class=\"headerlink\" title=\"创建一个资源对象 MultiService\"></a>创建一个资源对象 MultiService</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk create api --group multiservice --version v1 --kind MultiService --resource&#x3D;true --controller&#x3D;true --namespaced&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"对Spec字段进行更改，将MultiService结构体改为\"><a href=\"#对Spec字段进行更改，将MultiService结构体改为\" class=\"headerlink\" title=\"对Spec字段进行更改，将MultiService结构体改为\"></a>对Spec字段进行更改，将MultiService结构体改为</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> MultiServiceSpec <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n    Service <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"service,omitempty\"`</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"更新CRD文件\"><a href=\"#更新CRD文件\" class=\"headerlink\" title=\"更新CRD文件\"></a>更新CRD文件</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">make manifests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><p>Operator SDK 为我们创建了一个快速启动的代码和相关配置，如果我们要开始处理相关的逻辑，我们可以在项目中搜索TODO(user)这个注释来实现我们自己的逻辑，比如在我的 VSCode 环境中，看上去是这样的：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>MultiService4Reconciler<span class=\"token punctuation\">)</span> <span class=\"token function\">Reconcile</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req ctrl<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token boolean\">_</span> <span class=\"token operator\">=</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">FromContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// your logic here</span>\n    <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"部署-crd\"><a href=\"#部署-crd\" class=\"headerlink\" title=\"部署 crd\"></a>部署 crd</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">kubectl apply -f config&#x2F;crd&#x2F;bases&#x2F;xx.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"编写-cr\"><a href=\"#编写-cr\" class=\"headerlink\" title=\"编写 cr\"></a>编写 cr</h2><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 这里的 multiservice.example.com/v1</span>\n<span class=\"token comment\"># multiservice 是根据 --group multiservice 而来,</span>\n<span class=\"token comment\"># example.com 是根据 operator-sdk init --domain example.com 而来。</span>\n<span class=\"token comment\"># v1 是根据 --version v1 而来。</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> multiservice.example.com/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> MultiService\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> hello<span class=\"token punctuation\">-</span>world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"监听的-cr-范围\"><a href=\"#监听的-cr-范围\" class=\"headerlink\" title=\"监听的 cr 范围\"></a>监听的 cr 范围</h2><p>在 main.go 中的 ctrl.NewManage 处可以对其 NameSpace参数进行修改。””代表监听所有。（如果没有可以之间新增NameSpace字段）</p>\n<h2 id=\"获取对应事件\"><a href=\"#获取对应事件\" class=\"headerlink\" title=\"获取对应事件\"></a>获取对应事件</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// 部署后才会触发Reconcile</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>MultiService4Reconciler<span class=\"token punctuation\">)</span> <span class=\"token function\">Reconcile</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req ctrl<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\treqLogger <span class=\"token operator\">:=</span> ctrl<span class=\"token punctuation\">.</span>Log<span class=\"token punctuation\">.</span><span class=\"token function\">WithName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reconcile\"</span><span class=\"token punctuation\">)</span>\n    reqLogger<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reconciling MultiService4\"</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n\tms4 <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>multi4<span class=\"token punctuation\">.</span>MultiService4<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>NamespacedName<span class=\"token punctuation\">,</span> ms4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delete\"</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">reconciled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">requeueWithError</span><span class=\"token punctuation\">(</span>reqLogger<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span> ms4<span class=\"token punctuation\">.</span>Generation <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Update\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h5><p>operator-sdk 不同版本之间的命令行参数有很多不同，如果本文与你的环境有差异，请移步<a href=\"https://sdk.operatorframework.io/\">operator-sdk官网</a>。</p>\n","site":{"data":{}},"excerpt":"<p>快速生成operator框架</p>","more":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>operator-sdk版本：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk version\noperator-sdk version: &quot;v1.9.0-2-g9fa13f31&quot;, commit: &quot;9fa13f31e2b265253c105315ee12cc439e7b4174&quot;, kubernetes version: &quot;v1.20.2&quot;, go version: &quot;go1.16.2&quot;, GOOS: &quot;darwin&quot;, GOARCH: &quot;arm64&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>开发环境：MacOs</p>\n<h2 id=\"我们首先进入一个项目，对项目进行初始化\"><a href=\"#我们首先进入一个项目，对项目进行初始化\" class=\"headerlink\" title=\"我们首先进入一个项目，对项目进行初始化\"></a>我们首先进入一个项目，对项目进行初始化</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk init --domain example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"创建一个资源对象-MultiService\"><a href=\"#创建一个资源对象-MultiService\" class=\"headerlink\" title=\"创建一个资源对象 MultiService\"></a>创建一个资源对象 MultiService</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk create api --group multiservice --version v1 --kind MultiService --resource&#x3D;true --controller&#x3D;true --namespaced&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"对Spec字段进行更改，将MultiService结构体改为\"><a href=\"#对Spec字段进行更改，将MultiService结构体改为\" class=\"headerlink\" title=\"对Spec字段进行更改，将MultiService结构体改为\"></a>对Spec字段进行更改，将MultiService结构体改为</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> MultiServiceSpec <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n    Service <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"service,omitempty\"`</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"更新CRD文件\"><a href=\"#更新CRD文件\" class=\"headerlink\" title=\"更新CRD文件\"></a>更新CRD文件</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">make manifests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><p>Operator SDK 为我们创建了一个快速启动的代码和相关配置，如果我们要开始处理相关的逻辑，我们可以在项目中搜索TODO(user)这个注释来实现我们自己的逻辑，比如在我的 VSCode 环境中，看上去是这样的：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>MultiService4Reconciler<span class=\"token punctuation\">)</span> <span class=\"token function\">Reconcile</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req ctrl<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token boolean\">_</span> <span class=\"token operator\">=</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">FromContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// your logic here</span>\n    <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"部署-crd\"><a href=\"#部署-crd\" class=\"headerlink\" title=\"部署 crd\"></a>部署 crd</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">kubectl apply -f config&#x2F;crd&#x2F;bases&#x2F;xx.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"编写-cr\"><a href=\"#编写-cr\" class=\"headerlink\" title=\"编写 cr\"></a>编写 cr</h2><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 这里的 multiservice.example.com/v1</span>\n<span class=\"token comment\"># multiservice 是根据 --group multiservice 而来,</span>\n<span class=\"token comment\"># example.com 是根据 operator-sdk init --domain example.com 而来。</span>\n<span class=\"token comment\"># v1 是根据 --version v1 而来。</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> multiservice.example.com/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> MultiService\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> service\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> hello<span class=\"token punctuation\">-</span>world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"监听的-cr-范围\"><a href=\"#监听的-cr-范围\" class=\"headerlink\" title=\"监听的 cr 范围\"></a>监听的 cr 范围</h2><p>在 main.go 中的 ctrl.NewManage 处可以对其 NameSpace参数进行修改。””代表监听所有。（如果没有可以之间新增NameSpace字段）</p>\n<h2 id=\"获取对应事件\"><a href=\"#获取对应事件\" class=\"headerlink\" title=\"获取对应事件\"></a>获取对应事件</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// 部署后才会触发Reconcile</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>MultiService4Reconciler<span class=\"token punctuation\">)</span> <span class=\"token function\">Reconcile</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req ctrl<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\treqLogger <span class=\"token operator\">:=</span> ctrl<span class=\"token punctuation\">.</span>Log<span class=\"token punctuation\">.</span><span class=\"token function\">WithName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reconcile\"</span><span class=\"token punctuation\">)</span>\n    reqLogger<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reconciling MultiService4\"</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n\tms4 <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>multi4<span class=\"token punctuation\">.</span>MultiService4<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>NamespacedName<span class=\"token punctuation\">,</span> ms4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotFound</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delete\"</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">reconciled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">requeueWithError</span><span class=\"token punctuation\">(</span>reqLogger<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span> ms4<span class=\"token punctuation\">.</span>Generation <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Update\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h5><p>operator-sdk 不同版本之间的命令行参数有很多不同，如果本文与你的环境有差异，请移步<a href=\"https://sdk.operatorframework.io/\">operator-sdk官网</a>。</p>"},{"layout":"post","title":"部署Rancher","date":"2021-07-20T06:44:34.000Z","_content":"\nrancer是一个多k8s集群管理工具\n<!-- more -->\n\n## 在k8s集群里安装\n直接部署在k8s中具备高可用\n\n中文官方https://www.rancher.cn\n\n英文官网https://rancher.com\n\n#### <font color=red>rancher需要cert-manager</font>\n```sh\n# 添加helm仓库\nhelm repo add jetstack https://charts.jetstack.io\n\n# 更新仓库\nhelm repo update\n\n# 创建cert-manager的namespace\nkubectl create namespace cert-manager\n\n# 使用helm安装cert-manager\nhelm install \\\n cert-manager jetstack/cert-manager \\\n --namespace cert-manager \\\n --version v1.0.3 \\\n --set installCRDs=true\n```\n#### 使用helm安装rancher\n```sh\n# 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha\nhelm repo add rancher-latest http://rancher-mirror.oss-cn-beijing.aliyuncs.com/server-charts/latest\n\n# 为rancher创建namespace\nkubectl create namespace cattle-system\n\n# 安装rancher\nhelm install rancher rancher-latest/rancher \\\n --namespace cattle-system \\\n--set hostname=<域名>\n# 域名随便填写\n```\n#### 单节点安装\n作为一个单独的程序管理其他的集群\n```sh\ndocker run -d --restart=unless-stopped \\\n  -p 80:80 -p 443:443 \\\n  -v /data/rancher:/var/lib/rancher/ \\\n  -v /data/rancher/log/auditlog:/var/log/auditlog \\\n  -e CATTLE_SYSTEM_CATALOG=bundled \\\n  -e AUDIT_LEVEL=3 \\\n rancher/rancher:stable --no-cacerts\n```","source":"_posts/部署Rancher.md","raw":"---\nlayout: post\ntitle: 部署Rancher\ndate: 2021-07-20 14:44:34\ntags: 安装部署\n---\n\nrancer是一个多k8s集群管理工具\n<!-- more -->\n\n## 在k8s集群里安装\n直接部署在k8s中具备高可用\n\n中文官方https://www.rancher.cn\n\n英文官网https://rancher.com\n\n#### <font color=red>rancher需要cert-manager</font>\n```sh\n# 添加helm仓库\nhelm repo add jetstack https://charts.jetstack.io\n\n# 更新仓库\nhelm repo update\n\n# 创建cert-manager的namespace\nkubectl create namespace cert-manager\n\n# 使用helm安装cert-manager\nhelm install \\\n cert-manager jetstack/cert-manager \\\n --namespace cert-manager \\\n --version v1.0.3 \\\n --set installCRDs=true\n```\n#### 使用helm安装rancher\n```sh\n# 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha\nhelm repo add rancher-latest http://rancher-mirror.oss-cn-beijing.aliyuncs.com/server-charts/latest\n\n# 为rancher创建namespace\nkubectl create namespace cattle-system\n\n# 安装rancher\nhelm install rancher rancher-latest/rancher \\\n --namespace cattle-system \\\n--set hostname=<域名>\n# 域名随便填写\n```\n#### 单节点安装\n作为一个单独的程序管理其他的集群\n```sh\ndocker run -d --restart=unless-stopped \\\n  -p 80:80 -p 443:443 \\\n  -v /data/rancher:/var/lib/rancher/ \\\n  -v /data/rancher/log/auditlog:/var/log/auditlog \\\n  -e CATTLE_SYSTEM_CATALOG=bundled \\\n  -e AUDIT_LEVEL=3 \\\n rancher/rancher:stable --no-cacerts\n```","slug":"部署Rancher","published":1,"updated":"2021-07-20T06:46:16.802Z","comments":1,"photos":[],"link":"","_id":"cksegcb9u000ux34wbkm0f4dl","content":"<p>rancer是一个多k8s集群管理工具</p>\n<span id=\"more\"></span>\n\n<h2 id=\"在k8s集群里安装\"><a href=\"#在k8s集群里安装\" class=\"headerlink\" title=\"在k8s集群里安装\"></a>在k8s集群里安装</h2><p>直接部署在k8s中具备高可用</p>\n<p>中文官方<a href=\"https://www.rancher.cn/\">https://www.rancher.cn</a></p>\n<p>英文官网<a href=\"https://rancher.com/\">https://rancher.com</a></p>\n<h4 id=\"rancher需要cert-manager\"><a href=\"#rancher需要cert-manager\" class=\"headerlink\" title=\"rancher需要cert-manager\"></a><font color=red>rancher需要cert-manager</font></h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 添加helm仓库\nhelm repo add jetstack https:&#x2F;&#x2F;charts.jetstack.io\n\n# 更新仓库\nhelm repo update\n\n# 创建cert-manager的namespace\nkubectl create namespace cert-manager\n\n# 使用helm安装cert-manager\nhelm install \\\n cert-manager jetstack&#x2F;cert-manager \\\n --namespace cert-manager \\\n --version v1.0.3 \\\n --set installCRDs&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用helm安装rancher\"><a href=\"#使用helm安装rancher\" class=\"headerlink\" title=\"使用helm安装rancher\"></a>使用helm安装rancher</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha\nhelm repo add rancher-latest http:&#x2F;&#x2F;rancher-mirror.oss-cn-beijing.aliyuncs.com&#x2F;server-charts&#x2F;latest\n\n# 为rancher创建namespace\nkubectl create namespace cattle-system\n\n# 安装rancher\nhelm install rancher rancher-latest&#x2F;rancher \\\n --namespace cattle-system \\\n--set hostname&#x3D;&lt;域名&gt;\n# 域名随便填写<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"单节点安装\"><a href=\"#单节点安装\" class=\"headerlink\" title=\"单节点安装\"></a>单节点安装</h4><p>作为一个单独的程序管理其他的集群</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker run -d --restart&#x3D;unless-stopped \\\n  -p 80:80 -p 443:443 \\\n  -v &#x2F;data&#x2F;rancher:&#x2F;var&#x2F;lib&#x2F;rancher&#x2F; \\\n  -v &#x2F;data&#x2F;rancher&#x2F;log&#x2F;auditlog:&#x2F;var&#x2F;log&#x2F;auditlog \\\n  -e CATTLE_SYSTEM_CATALOG&#x3D;bundled \\\n  -e AUDIT_LEVEL&#x3D;3 \\\n rancher&#x2F;rancher:stable --no-cacerts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{}},"excerpt":"<p>rancer是一个多k8s集群管理工具</p>","more":"<h2 id=\"在k8s集群里安装\"><a href=\"#在k8s集群里安装\" class=\"headerlink\" title=\"在k8s集群里安装\"></a>在k8s集群里安装</h2><p>直接部署在k8s中具备高可用</p>\n<p>中文官方<a href=\"https://www.rancher.cn/\">https://www.rancher.cn</a></p>\n<p>英文官网<a href=\"https://rancher.com/\">https://rancher.com</a></p>\n<h4 id=\"rancher需要cert-manager\"><a href=\"#rancher需要cert-manager\" class=\"headerlink\" title=\"rancher需要cert-manager\"></a><font color=red>rancher需要cert-manager</font></h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 添加helm仓库\nhelm repo add jetstack https:&#x2F;&#x2F;charts.jetstack.io\n\n# 更新仓库\nhelm repo update\n\n# 创建cert-manager的namespace\nkubectl create namespace cert-manager\n\n# 使用helm安装cert-manager\nhelm install \\\n cert-manager jetstack&#x2F;cert-manager \\\n --namespace cert-manager \\\n --version v1.0.3 \\\n --set installCRDs&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用helm安装rancher\"><a href=\"#使用helm安装rancher\" class=\"headerlink\" title=\"使用helm安装rancher\"></a>使用helm安装rancher</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha\nhelm repo add rancher-latest http:&#x2F;&#x2F;rancher-mirror.oss-cn-beijing.aliyuncs.com&#x2F;server-charts&#x2F;latest\n\n# 为rancher创建namespace\nkubectl create namespace cattle-system\n\n# 安装rancher\nhelm install rancher rancher-latest&#x2F;rancher \\\n --namespace cattle-system \\\n--set hostname&#x3D;&lt;域名&gt;\n# 域名随便填写<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"单节点安装\"><a href=\"#单节点安装\" class=\"headerlink\" title=\"单节点安装\"></a>单节点安装</h4><p>作为一个单独的程序管理其他的集群</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker run -d --restart&#x3D;unless-stopped \\\n  -p 80:80 -p 443:443 \\\n  -v &#x2F;data&#x2F;rancher:&#x2F;var&#x2F;lib&#x2F;rancher&#x2F; \\\n  -v &#x2F;data&#x2F;rancher&#x2F;log&#x2F;auditlog:&#x2F;var&#x2F;log&#x2F;auditlog \\\n  -e CATTLE_SYSTEM_CATALOG&#x3D;bundled \\\n  -e AUDIT_LEVEL&#x3D;3 \\\n rancher&#x2F;rancher:stable --no-cacerts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"layout":"post","title":"Minikube的安装使用","date":"2021-07-20T06:14:42.000Z","_content":"快速部署 minikube\n<!-- more -->\n# Minikube安装使用\n在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境\n\n#### 下载安装\n阿里云版本地址,官方版本地址,推荐阿里云版本\n#### 下载阿里云版本二进制文件\nMacos\n```\ncurl -Lo minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.13.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/\n```\nLinux\n```\ncurl -Lo minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.14.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/\n```\n#### 验证安装\n执行minikube version验证安装\n\n#### 启动Minikube\n```\nminikube start --driver=docker --image-mirror-country cn\n```\n这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将kubectl设置为minikube\n再次启动是只需要执行minikube start即可\n\n#### 常用命令\n```\nminikube start 启动集群\n\nminikube stop 停止集群\n\nminikube delete 删除集群\n\nminikube dashboard 打开k8s报表\n\nminikube status 查看minikube状态\n\nminikube ssh 登录到minikube节点上\n```\n\n#### 常见问题\n如果在 Mac 上安装 minikube 不成功，可以：\n\n1. stop docker(退出应用即可)\n\n2. rm ~/Library/Containers/com.docker.docker\n\n3. 启动docker后运行minikube start","source":"_posts/Minikube的安装使用.md","raw":"---\nlayout: post\ntitle: Minikube的安装使用\ndate: 2021-07-20 14:14:42\ntags: \n- k8s\n- 安装部署\n---\n快速部署 minikube\n<!-- more -->\n# Minikube安装使用\n在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境\n\n#### 下载安装\n阿里云版本地址,官方版本地址,推荐阿里云版本\n#### 下载阿里云版本二进制文件\nMacos\n```\ncurl -Lo minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.13.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/\n```\nLinux\n```\ncurl -Lo minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.14.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/\n```\n#### 验证安装\n执行minikube version验证安装\n\n#### 启动Minikube\n```\nminikube start --driver=docker --image-mirror-country cn\n```\n这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将kubectl设置为minikube\n再次启动是只需要执行minikube start即可\n\n#### 常用命令\n```\nminikube start 启动集群\n\nminikube stop 停止集群\n\nminikube delete 删除集群\n\nminikube dashboard 打开k8s报表\n\nminikube status 查看minikube状态\n\nminikube ssh 登录到minikube节点上\n```\n\n#### 常见问题\n如果在 Mac 上安装 minikube 不成功，可以：\n\n1. stop docker(退出应用即可)\n\n2. rm ~/Library/Containers/com.docker.docker\n\n3. 启动docker后运行minikube start","slug":"Minikube的安装使用","published":1,"updated":"2021-07-20T06:46:51.268Z","comments":1,"photos":[],"link":"","_id":"cksegcb9v000wx34w6bza1ttq","content":"<p>快速部署 minikube</p>\n<span id=\"more\"></span>\n<h1 id=\"Minikube安装使用\"><a href=\"#Minikube安装使用\" class=\"headerlink\" title=\"Minikube安装使用\"></a>Minikube安装使用</h1><p>在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境</p>\n<h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><p>阿里云版本地址,官方版本地址,推荐阿里云版本</p>\n<h4 id=\"下载阿里云版本二进制文件\"><a href=\"#下载阿里云版本二进制文件\" class=\"headerlink\" title=\"下载阿里云版本二进制文件\"></a>下载阿里云版本二进制文件</h4><p>Macos</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -Lo minikube https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;minikube&#x2F;releases&#x2F;v1.13.0&#x2F;minikube-darwin-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube &#x2F;usr&#x2F;local&#x2F;bin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Linux</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -Lo minikube https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;minikube&#x2F;releases&#x2F;v1.14.2&#x2F;minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube &#x2F;usr&#x2F;local&#x2F;bin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h4><p>执行minikube version验证安装</p>\n<h4 id=\"启动Minikube\"><a href=\"#启动Minikube\" class=\"headerlink\" title=\"启动Minikube\"></a>启动Minikube</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">minikube start --driver&#x3D;docker --image-mirror-country cn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将kubectl设置为minikube<br>再次启动是只需要执行minikube start即可</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">minikube start 启动集群\n\nminikube stop 停止集群\n\nminikube delete 删除集群\n\nminikube dashboard 打开k8s报表\n\nminikube status 查看minikube状态\n\nminikube ssh 登录到minikube节点上<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h4><p>如果在 Mac 上安装 minikube 不成功，可以：</p>\n<ol>\n<li><p>stop docker(退出应用即可)</p>\n</li>\n<li><p>rm ~/Library/Containers/com.docker.docker</p>\n</li>\n<li><p>启动docker后运行minikube start</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>快速部署 minikube</p>","more":"<h1 id=\"Minikube安装使用\"><a href=\"#Minikube安装使用\" class=\"headerlink\" title=\"Minikube安装使用\"></a>Minikube安装使用</h1><p>在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境</p>\n<h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><p>阿里云版本地址,官方版本地址,推荐阿里云版本</p>\n<h4 id=\"下载阿里云版本二进制文件\"><a href=\"#下载阿里云版本二进制文件\" class=\"headerlink\" title=\"下载阿里云版本二进制文件\"></a>下载阿里云版本二进制文件</h4><p>Macos</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -Lo minikube https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;minikube&#x2F;releases&#x2F;v1.13.0&#x2F;minikube-darwin-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube &#x2F;usr&#x2F;local&#x2F;bin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Linux</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -Lo minikube https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;minikube&#x2F;releases&#x2F;v1.14.2&#x2F;minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube &#x2F;usr&#x2F;local&#x2F;bin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h4><p>执行minikube version验证安装</p>\n<h4 id=\"启动Minikube\"><a href=\"#启动Minikube\" class=\"headerlink\" title=\"启动Minikube\"></a>启动Minikube</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">minikube start --driver&#x3D;docker --image-mirror-country cn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将kubectl设置为minikube<br>再次启动是只需要执行minikube start即可</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">minikube start 启动集群\n\nminikube stop 停止集群\n\nminikube delete 删除集群\n\nminikube dashboard 打开k8s报表\n\nminikube status 查看minikube状态\n\nminikube ssh 登录到minikube节点上<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h4><p>如果在 Mac 上安装 minikube 不成功，可以：</p>\n<ol>\n<li><p>stop docker(退出应用即可)</p>\n</li>\n<li><p>rm ~/Library/Containers/com.docker.docker</p>\n</li>\n<li><p>启动docker后运行minikube start</p>\n</li>\n</ol>"}],"PostAsset":[],"PostCategory":[{"post_id":"cksegcb9r000hx34w94xb7b21","category_id":"cksegcb9s000kx34w5nnm01kw","_id":"cksegcb9v000xx34w2lz838l0"}],"PostTag":[{"post_id":"cksegcb9p0008x34w8mrt9r66","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9q000bx34wavkt3i1x"},{"post_id":"cksegcb9m0001x34w9ify8wlk","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9r000dx34w4sx4aie5"},{"post_id":"cksegcb9p0009x34wbriz7qzs","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9r000gx34wbgbieyzj"},{"post_id":"cksegcb9q000cx34w5041g6oe","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9s000ix34wd62naqwi"},{"post_id":"cksegcb9n0003x34waoq160vo","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9t000mx34wcsoqbcfr"},{"post_id":"cksegcb9r000ex34wce7gedjf","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9t000ox34wcc06g1nq"},{"post_id":"cksegcb9o0006x34wc5yeb0bq","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9u000qx34wghftentb"},{"post_id":"cksegcb9t000px34w1hnzei97","tag_id":"cksegcb9o0004x34watfs85s3","_id":"cksegcb9u000tx34w1enj3qmx"},{"post_id":"cksegcb9r000hx34w94xb7b21","tag_id":"cksegcb9t000lx34w5zu8d3mj","_id":"cksegcb9u000vx34whzs8bi2g"},{"post_id":"cksegcb9s000jx34wcii548xj","tag_id":"cksegcb9t000lx34w5zu8d3mj","_id":"cksegcb9v0010x34wageh2pu9"},{"post_id":"cksegcb9s000jx34wcii548xj","tag_id":"cksegcb9v000yx34w6pfve3ee","_id":"cksegcb9v0011x34werif4dyv"},{"post_id":"cksegcb9t000nx34whqi423qc","tag_id":"cksegcb9v000zx34w3npu2ulf","_id":"cksegcb9v0013x34wcxad0q1b"},{"post_id":"cksegcb9u000rx34wa6j29h05","tag_id":"cksegcb9v0012x34w2z6y3xr1","_id":"cksegcb9w0015x34wglakcm2a"},{"post_id":"cksegcb9u000ux34wbkm0f4dl","tag_id":"cksegcb9v000yx34w6pfve3ee","_id":"cksegcb9w0017x34w4xpyb31w"},{"post_id":"cksegcb9v000wx34w6bza1ttq","tag_id":"cksegcb9t000lx34w5zu8d3mj","_id":"cksegcb9w0018x34w6bze5qrn"},{"post_id":"cksegcb9v000wx34w6bza1ttq","tag_id":"cksegcb9v000yx34w6pfve3ee","_id":"cksegcb9w0019x34w2pss3ckk"}],"Tag":[{"name":"golang","_id":"cksegcb9o0004x34watfs85s3"},{"name":"k8s","_id":"cksegcb9t000lx34w5zu8d3mj"},{"name":"安装部署","_id":"cksegcb9v000yx34w6pfve3ee"},{"name":"linux","_id":"cksegcb9v000zx34w3npu2ulf"},{"name":"开发","_id":"cksegcb9v0012x34w2z6y3xr1"}]}}